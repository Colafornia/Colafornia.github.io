{"expireTime":9007200825609309000,"key":"gatsby-plugin-mdx-entire-payload-d026428d5c4c4e31475fe6e646e4ecc0-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"AngularJS 可以记住 value 值并且会把它和之前的 value 值进行比较。这就是基本的脏检查机制。如果某处的value 值发生了变化，那么 AngularJS 就会触发指定事件。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":97,"offset":97},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":97,"offset":97},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"$apply()","position":{"start":{"line":4,"column":1,"offset":99},"end":{"line":4,"column":11,"offset":109},"indent":[]}},{"type":"text","value":"这个方法是用来处理AngularJS框架之外的表达式的，与它相辅相成的还有","position":{"start":{"line":4,"column":11,"offset":109},"end":{"line":4,"column":48,"offset":146},"indent":[]}},{"type":"inlineCode","value":"$digest()","position":{"start":{"line":4,"column":48,"offset":146},"end":{"line":4,"column":59,"offset":157},"indent":[]}},{"type":"text","value":"方法。一次digest就是一次完全的脏检查，它可以运行在所有的浏览器中。","position":{"start":{"line":4,"column":59,"offset":157},"end":{"line":4,"column":95,"offset":193},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":99},"end":{"line":4,"column":95,"offset":193},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"关于$watch","position":{"start":{"line":6,"column":5,"offset":199},"end":{"line":6,"column":13,"offset":207},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":195},"end":{"line":6,"column":13,"offset":207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"每一次你在UI中绑定什么东西时你就会往","position":{"start":{"line":8,"column":1,"offset":209},"end":{"line":8,"column":20,"offset":228},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":8,"column":20,"offset":228},"end":{"line":8,"column":28,"offset":236},"indent":[]}},{"type":"text","value":"的队列中插入一条","position":{"start":{"line":8,"column":28,"offset":236},"end":{"line":8,"column":36,"offset":244},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":8,"column":36,"offset":244},"end":{"line":8,"column":44,"offset":252},"indent":[]}},{"type":"text","value":"，想象一下$watch就是在所监测的model中可以侦查数据变化的东西。比如说：","position":{"start":{"line":8,"column":44,"offset":252},"end":{"line":8,"column":84,"offset":292},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":209},"end":{"line":8,"column":84,"offset":292},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"User: <input type=\"text\" ng-model=\"user\" />\nPassword: <input type=\"password\" ng-model=\"pass\" />","position":{"start":{"line":10,"column":1,"offset":294},"end":{"line":13,"column":4,"offset":407},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"在这里我们分别给两个input绑定了","position":{"start":{"line":15,"column":1,"offset":409},"end":{"line":15,"column":19,"offset":427},"indent":[]}},{"type":"inlineCode","value":"$scope.user","position":{"start":{"line":15,"column":19,"offset":427},"end":{"line":15,"column":32,"offset":440},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":15,"column":32,"offset":440},"end":{"line":15,"column":33,"offset":441},"indent":[]}},{"type":"inlineCode","value":"$scope.pass","position":{"start":{"line":15,"column":33,"offset":441},"end":{"line":15,"column":46,"offset":454},"indent":[]}},{"type":"text","value":"，就是说我们向","position":{"start":{"line":15,"column":46,"offset":454},"end":{"line":15,"column":53,"offset":461},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":15,"column":53,"offset":461},"end":{"line":15,"column":61,"offset":469},"indent":[]}},{"type":"text","value":"队列添加了两个","position":{"start":{"line":15,"column":61,"offset":469},"end":{"line":15,"column":68,"offset":476},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":15,"column":68,"offset":476},"end":{"line":15,"column":76,"offset":484},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":15,"column":76,"offset":484},"end":{"line":15,"column":77,"offset":485},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":409},"end":{"line":15,"column":77,"offset":485},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"每一个绑定到了UI上的数据都会生成一个","position":{"start":{"line":17,"column":1,"offset":487},"end":{"line":17,"column":20,"offset":506},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":17,"column":20,"offset":506},"end":{"line":17,"column":28,"offset":514},"indent":[]}},{"type":"text","value":"，我们的模板加载完成时，也就是在linking阶段，Angular解释器会寻找每一个directive并且创造它们所需的","position":{"start":{"line":17,"column":28,"offset":514},"end":{"line":17,"column":88,"offset":574},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":17,"column":88,"offset":574},"end":{"line":17,"column":96,"offset":582},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":17,"column":96,"offset":582},"end":{"line":17,"column":97,"offset":583},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":487},"end":{"line":17,"column":97,"offset":583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"一个watcher包含了三个东西：","position":{"start":{"line":19,"column":1,"offset":585},"end":{"line":19,"column":18,"offset":602},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":585},"end":{"line":19,"column":18,"offset":602},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"它正在监听的表达式。有可能是一个简单的属性名，也有可能是更复杂的东西","position":{"start":{"line":21,"column":3,"offset":606},"end":{"line":21,"column":37,"offset":640},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":606},"end":{"line":21,"column":37,"offset":640},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":604},"end":{"line":22,"column":1,"offset":641},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"这个表达式目前已知的value值，它会与当前正在计算的表达式value值进行核对比较，如果监听到value值发生了改变将会触发函数并把","position":{"start":{"line":23,"column":3,"offset":644},"end":{"line":23,"column":70,"offset":711},"indent":[]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":23,"column":70,"offset":711},"end":{"line":23,"column":78,"offset":719},"indent":[]}},{"type":"text","value":"标记为","position":{"start":{"line":23,"column":78,"offset":719},"end":{"line":23,"column":81,"offset":722},"indent":[]}},{"type":"inlineCode","value":"dirty","position":{"start":{"line":23,"column":81,"offset":722},"end":{"line":23,"column":88,"offset":729},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":644},"end":{"line":23,"column":88,"offset":729},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":642},"end":{"line":24,"column":1,"offset":730},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"被触发执行的函数","position":{"start":{"line":25,"column":3,"offset":733},"end":{"line":25,"column":11,"offset":741},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":733},"end":{"line":25,"column":11,"offset":741},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":731},"end":{"line":25,"column":11,"offset":741},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":604},"end":{"line":25,"column":11,"offset":741},"indent":[1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"$$watchers = [\n    {\n        eq: false, // 表明我们是否需要检查对象级别的相等\n        fn: function( newValue, oldValue ) {}, // 这是我们提供的监听器函数\n        last: 'Ryan', // 变量的最新值\n        exp: function(){}, // 我们提供的watchExp函数\n        get: function(){} // Angular's编译后的watchExp函数\n    }\n];","position":{"start":{"line":27,"column":1,"offset":743},"end":{"line":37,"column":4,"offset":1024},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"定义监听器的几种方法：\n1.把$watch设置为","position":{"start":{"line":39,"column":1,"offset":1026},"end":{"line":40,"column":13,"offset":1050},"indent":[1]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":40,"column":13,"offset":1050},"end":{"line":40,"column":21,"offset":1058},"indent":[]}},{"type":"text","value":"的一种属性:","position":{"start":{"line":40,"column":21,"offset":1058},"end":{"line":40,"column":27,"offset":1064},"indent":[]}},{"type":"inlineCode","value":"$scope.$watch('person.username', validateUnique);","position":{"start":{"line":40,"column":27,"offset":1064},"end":{"line":40,"column":78,"offset":1115},"indent":[]}},{"type":"text","value":"\n2.插入angular表达式:","position":{"start":{"line":40,"column":78,"offset":1115},"end":{"line":41,"column":16,"offset":1131},"indent":[1]}},{"type":"inlineCode","value":"<p>username: {{person.username}}</p>","position":{"start":{"line":41,"column":16,"offset":1131},"end":{"line":41,"column":54,"offset":1169},"indent":[]}},{"type":"text","value":"\n3.使用类似于ng-model的指令来定义监听器:","position":{"start":{"line":41,"column":54,"offset":1169},"end":{"line":42,"column":26,"offset":1195},"indent":[1]}},{"type":"inlineCode","value":"<input ng-model=\"person.username />","position":{"start":{"line":42,"column":26,"offset":1195},"end":{"line":42,"column":63,"offset":1232},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1026},"end":{"line":42,"column":63,"offset":1232},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"关于","position":{"start":{"line":47,"column":5,"offset":1241},"end":{"line":47,"column":7,"offset":1243},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":47,"column":7,"offset":1243},"end":{"line":47,"column":16,"offset":1252},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":47,"column":16,"offset":1252},"end":{"line":47,"column":17,"offset":1253},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":47,"column":17,"offset":1253},"end":{"line":47,"column":25,"offset":1261},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1237},"end":{"line":47,"column":25,"offset":1261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"如果你点击一个按钮，或者在一个input框中输入，事件的回调函数会在javascript中运行，并且你可以做任意的DOM操作，当回调函数结束时，浏览器会相应地在DOM中做出改变。","position":{"start":{"line":48,"column":1,"offset":1262},"end":{"line":48,"column":90,"offset":1351},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1262},"end":{"line":48,"column":90,"offset":1351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当一个控制器/指令/等等东西在AngularJS中运行时，AngularJS内部会运行一个叫做","position":{"start":{"line":50,"column":1,"offset":1353},"end":{"line":50,"column":48,"offset":1400},"indent":[]}},{"type":"inlineCode","value":"$scope.$apply","position":{"start":{"line":50,"column":48,"offset":1400},"end":{"line":50,"column":63,"offset":1415},"indent":[]}},{"type":"text","value":"的函数。这个","position":{"start":{"line":50,"column":63,"offset":1415},"end":{"line":50,"column":69,"offset":1421},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":50,"column":69,"offset":1421},"end":{"line":50,"column":77,"offset":1429},"indent":[]}},{"type":"text","value":"函数会接收一个函数作为参数并运行它，在这之后才会在rootScope上运行","position":{"start":{"line":50,"column":77,"offset":1429},"end":{"line":50,"column":114,"offset":1466},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":50,"column":114,"offset":1466},"end":{"line":50,"column":123,"offset":1475},"indent":[]}},{"type":"text","value":"函数。","position":{"start":{"line":50,"column":123,"offset":1475},"end":{"line":50,"column":126,"offset":1478},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1353},"end":{"line":50,"column":126,"offset":1478},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"AngularJS的","position":{"start":{"line":52,"column":1,"offset":1480},"end":{"line":52,"column":11,"offset":1490},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":52,"column":11,"offset":1490},"end":{"line":52,"column":19,"offset":1498},"indent":[]}},{"type":"text","value":"函数代码如下所示：","position":{"start":{"line":52,"column":19,"offset":1498},"end":{"line":52,"column":28,"offset":1507},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1480},"end":{"line":52,"column":28,"offset":1507},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"$apply: function(expr) {\n    try {\n      beginPhase('$apply');\n      return this.$eval(expr);\n    } catch (e) {\n      $exceptionHandler(e);\n    } finally {\n      clearPhase();\n      try {\n        $rootScope.$digest();\n      } catch (e) {\n        $exceptionHandler(e);\n        throw e;\n      }\n    }\n}","position":{"start":{"line":54,"column":1,"offset":1509},"end":{"line":71,"column":4,"offset":1827},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"由此可见，使用","position":{"start":{"line":72,"column":1,"offset":1828},"end":{"line":72,"column":8,"offset":1835},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":72,"column":8,"offset":1835},"end":{"line":72,"column":16,"offset":1843},"indent":[]}},{"type":"text","value":"可带参数。","position":{"start":{"line":72,"column":16,"offset":1843},"end":{"line":72,"column":21,"offset":1848},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1828},"end":{"line":72,"column":21,"offset":1848},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"$digest","position":{"start":{"line":74,"column":1,"offset":1850},"end":{"line":74,"column":10,"offset":1859},"indent":[]}},{"type":"text","value":"函数将会在","position":{"start":{"line":74,"column":10,"offset":1859},"end":{"line":74,"column":15,"offset":1864},"indent":[]}},{"type":"inlineCode","value":"$rootScope","position":{"start":{"line":74,"column":15,"offset":1864},"end":{"line":74,"column":27,"offset":1876},"indent":[]}},{"type":"text","value":"中被","position":{"start":{"line":74,"column":27,"offset":1876},"end":{"line":74,"column":29,"offset":1878},"indent":[]}},{"type":"inlineCode","value":"$scope.$apply","position":{"start":{"line":74,"column":29,"offset":1878},"end":{"line":74,"column":44,"offset":1893},"indent":[]}},{"type":"text","value":"所调用。它将会在","position":{"start":{"line":74,"column":44,"offset":1893},"end":{"line":74,"column":52,"offset":1901},"indent":[]}},{"type":"inlineCode","value":"$rootScope","position":{"start":{"line":74,"column":52,"offset":1901},"end":{"line":74,"column":64,"offset":1913},"indent":[]}},{"type":"text","value":"中运行digest循环，然后向下遍历每一个作用域并在每个作用域上运行循环。在简单的情形中，digest循环将会触发所有位于","position":{"start":{"line":74,"column":64,"offset":1913},"end":{"line":74,"column":125,"offset":1974},"indent":[]}},{"type":"inlineCode","value":"$$watchers","position":{"start":{"line":74,"column":125,"offset":1974},"end":{"line":74,"column":137,"offset":1986},"indent":[]}},{"type":"text","value":"变量中的所有watchExp函数，将它们和最新的值进行对比，如果值不相同，就会触发监听器。","position":{"start":{"line":74,"column":137,"offset":1986},"end":{"line":74,"column":182,"offset":2031},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":74,"column":182,"offset":2031},"end":{"line":74,"column":191,"offset":2040},"indent":[]}},{"type":"text","value":"函数检查","position":{"start":{"line":74,"column":191,"offset":2040},"end":{"line":74,"column":195,"offset":2044},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":74,"column":195,"offset":2044},"end":{"line":74,"column":203,"offset":2052},"indent":[]}},{"type":"text","value":"队列中的所有监听器最新的value值，一次","position":{"start":{"line":74,"column":203,"offset":2052},"end":{"line":74,"column":224,"offset":2073},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":74,"column":224,"offset":2073},"end":{"line":74,"column":233,"offset":2082},"indent":[]}},{"type":"text","value":"循环是被指令触发的。如果表达式新的value值与之前不同，就会调用监听器的函数，这个函数可能是重新编译部分的DOM，重新计算","position":{"start":{"line":74,"column":233,"offset":2082},"end":{"line":74,"column":295,"offset":2144},"indent":[]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":74,"column":295,"offset":2144},"end":{"line":74,"column":303,"offset":2152},"indent":[]}},{"type":"text","value":"的值，激活一个AJAX请求，或者任何你想做的事。","position":{"start":{"line":74,"column":303,"offset":2152},"end":{"line":74,"column":327,"offset":2176},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1850},"end":{"line":74,"column":327,"offset":2176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"监听器函数可以修改","position":{"start":{"line":76,"column":1,"offset":2178},"end":{"line":76,"column":10,"offset":2187},"indent":[]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":76,"column":10,"offset":2187},"end":{"line":76,"column":18,"offset":2195},"indent":[]}},{"type":"text","value":"或是","position":{"start":{"line":76,"column":18,"offset":2195},"end":{"line":76,"column":20,"offset":2197},"indent":[]}},{"type":"inlineCode","value":"父$scope","position":{"start":{"line":76,"column":20,"offset":2197},"end":{"line":76,"column":29,"offset":2206},"indent":[]}},{"type":"text","value":"的其他属性，一旦有出发了一个监听器函数，我们就无法保证其它的","position":{"start":{"line":76,"column":29,"offset":2206},"end":{"line":76,"column":59,"offset":2236},"indent":[]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":76,"column":59,"offset":2236},"end":{"line":76,"column":67,"offset":2244},"indent":[]}},{"type":"text","value":"也是干净的，所以我们会再次执行整个digest循环。","position":{"start":{"line":76,"column":67,"offset":2244},"end":{"line":76,"column":93,"offset":2270},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2178},"end":{"line":76,"column":93,"offset":2270},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"$apply","position":{"start":{"line":78,"column":1,"offset":2272},"end":{"line":78,"column":9,"offset":2280},"indent":[]}},{"type":"text","value":"与","position":{"start":{"line":78,"column":9,"offset":2280},"end":{"line":78,"column":10,"offset":2281},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":78,"column":10,"offset":2281},"end":{"line":78,"column":19,"offset":2290},"indent":[]}},{"type":"text","value":"作用类似，","position":{"start":{"line":78,"column":19,"offset":2290},"end":{"line":78,"column":24,"offset":2295},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":78,"column":24,"offset":2295},"end":{"line":78,"column":32,"offset":2303},"indent":[]}},{"type":"text","value":"会使ng进入","position":{"start":{"line":78,"column":32,"offset":2303},"end":{"line":78,"column":38,"offset":2309},"indent":[]}},{"type":"inlineCode","value":"$digest cycle","position":{"start":{"line":78,"column":38,"offset":2309},"end":{"line":78,"column":53,"offset":2324},"indent":[]}},{"type":"text","value":", 并从","position":{"start":{"line":78,"column":53,"offset":2324},"end":{"line":78,"column":57,"offset":2328},"indent":[]}},{"type":"inlineCode","value":"$rootScope","position":{"start":{"line":78,"column":57,"offset":2328},"end":{"line":78,"column":69,"offset":2340},"indent":[]}},{"type":"text","value":"开始遍历(深度优先)检查数据变更。不同之处在于","position":{"start":{"line":78,"column":69,"offset":2340},"end":{"line":78,"column":92,"offset":2363},"indent":[]}},{"type":"inlineCode","value":"$apply","position":{"start":{"line":78,"column":92,"offset":2363},"end":{"line":78,"column":100,"offset":2371},"indent":[]}},{"type":"text","value":"可以带参数，并且会触发作用域上的所有监控，","position":{"start":{"line":78,"column":100,"offset":2371},"end":{"line":78,"column":121,"offset":2392},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":78,"column":121,"offset":2392},"end":{"line":78,"column":130,"offset":2401},"indent":[]}},{"type":"text","value":"仅仅触发当前作用域和子作用域的监控。","position":{"start":{"line":78,"column":130,"offset":2401},"end":{"line":78,"column":148,"offset":2419},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2272},"end":{"line":78,"column":148,"offset":2419},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"build your own dirty-checking","position":{"start":{"line":80,"column":5,"offset":2425},"end":{"line":80,"column":34,"offset":2454},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2421},"end":{"line":80,"column":34,"offset":2454},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"了解以上知识后，我们可以自己写一个具有基本功能的脏检测了。\n首先定义Scope，然后扩展这个函数的原型对象来复制","position":{"start":{"line":81,"column":1,"offset":2455},"end":{"line":82,"column":27,"offset":2511},"indent":[1]}},{"type":"text","value":"$","position":{"start":{"line":82,"column":27,"offset":2511},"end":{"line":82,"column":29,"offset":2513},"indent":[]}},{"type":"text","value":"digest和","position":{"start":{"line":82,"column":29,"offset":2513},"end":{"line":82,"column":36,"offset":2520},"indent":[]}},{"type":"text","value":"$","position":{"start":{"line":82,"column":36,"offset":2520},"end":{"line":82,"column":38,"offset":2522},"indent":[]}},{"type":"text","value":"watch","position":{"start":{"line":82,"column":38,"offset":2522},"end":{"line":82,"column":43,"offset":2527},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2455},"end":{"line":82,"column":43,"offset":2527},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"var Scope = function( ) {\n    this.$$watchers = [];\n};\n\nScope.prototype.$watch = function( ) {\n\n};\n\nScope.prototype.$digest = function( ) {\n\n};","position":{"start":{"line":84,"column":1,"offset":2529},"end":{"line":96,"column":4,"offset":2690},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"设置","position":{"start":{"line":98,"column":1,"offset":2692},"end":{"line":98,"column":3,"offset":2694},"indent":[]}},{"type":"inlineCode","value":"$watch","position":{"start":{"line":98,"column":3,"offset":2694},"end":{"line":98,"column":11,"offset":2702},"indent":[]}},{"type":"text","value":"函数，它接收watchExp和listener这两个参数，被调用时我们会把其push到","position":{"start":{"line":98,"column":11,"offset":2702},"end":{"line":98,"column":54,"offset":2745},"indent":[]}},{"type":"inlineCode","value":"$$watchers","position":{"start":{"line":98,"column":54,"offset":2745},"end":{"line":98,"column":66,"offset":2757},"indent":[]}},{"type":"text","value":"数组中。因此代码扩展为：","position":{"start":{"line":98,"column":66,"offset":2757},"end":{"line":98,"column":78,"offset":2769},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2692},"end":{"line":98,"column":78,"offset":2769},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"Scope.prototype.$watch = function( watchExp, listener ) {\n    this.$$watchers.push( {\n        watchExp: watchExp,\n        listener: listener || function() {}\n    } );\n};","position":{"start":{"line":100,"column":1,"offset":2771},"end":{"line":107,"column":4,"offset":2958},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"如果没有传入listener的话我们会把它设置为空函数。\n$digest用来检查新值旧值是否相等，如果不相等则触发监听器，不断循环这个过程，直到新值旧值相等。","position":{"start":{"line":109,"column":1,"offset":2960},"end":{"line":110,"column":51,"offset":3039},"indent":[1]}}],"position":{"start":{"line":109,"column":1,"offset":2960},"end":{"line":110,"column":51,"offset":3039},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"Scope.prototype.$digest = function( ) {\n    var dirty;\n\n    do {\n            dirty = false;\n\n            for( var i = 0; i < this.$$watchers.length; i++ ) {\n                var newValue = this.$$watchers[i].watchExp(),\n                    oldValue = this.$$watchers[i].last;\n\n                if( oldValue !== newValue ) {\n                    this.$$watchers[i].listener(newValue, oldValue);\n\n                    dirty = true;\n\n                    this.$$watchers[i].last = newValue;\n                }\n            }\n    } while(dirty);\n};","position":{"start":{"line":112,"column":1,"offset":3041},"end":{"line":133,"column":4,"offset":3596},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"下一步我们需要创建一个作用域的实例，并把实例赋值给$scope，然后注册监听函数，使得更新","position":{"start":{"line":135,"column":1,"offset":3598},"end":{"line":135,"column":46,"offset":3643},"indent":[]}},{"type":"inlineCode","value":"$scope","position":{"start":{"line":135,"column":46,"offset":3643},"end":{"line":135,"column":54,"offset":3651},"indent":[]}},{"type":"text","value":"之后运行","position":{"start":{"line":135,"column":54,"offset":3651},"end":{"line":135,"column":58,"offset":3655},"indent":[]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":135,"column":58,"offset":3655},"end":{"line":135,"column":67,"offset":3664},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3598},"end":{"line":135,"column":67,"offset":3664},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var $scope = new Scope();\n\n$scope.name = 'Ryan';\n\n$scope.$watch(function(){\n    return $scope.name;\n}, function( newValue, oldValue ) {\n    console.log(newValue, oldValue);\n} );\n\n$scope.$digest();","position":{"start":{"line":137,"column":1,"offset":3666},"end":{"line":149,"column":4,"offset":3880},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"我们发现在控制台输出了","position":{"start":{"line":151,"column":1,"offset":3882},"end":{"line":151,"column":12,"offset":3893},"indent":[]}},{"type":"inlineCode","value":"Ryan undefined","position":{"start":{"line":151,"column":12,"offset":3893},"end":{"line":151,"column":28,"offset":3909},"indent":[]}},{"type":"text","value":"，成功了！\n最后我们可以把","position":{"start":{"line":151,"column":28,"offset":3909},"end":{"line":152,"column":8,"offset":3922},"indent":[1]}},{"type":"inlineCode","value":"$digest","position":{"start":{"line":152,"column":8,"offset":3922},"end":{"line":152,"column":17,"offset":3931},"indent":[]}},{"type":"text","value":"函数绑定到事件上，比如input元素的keyup事件，即意味着我们可以实现双向数据绑定！","position":{"start":{"line":152,"column":17,"offset":3931},"end":{"line":152,"column":61,"offset":3975},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":3882},"end":{"line":152,"column":61,"offset":3975},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"var Scope = function( ) {\n    this.$$watchers = [];\n};\n\nScope.prototype.$watch = function( watchExp, listener ) {\n    this.$$watchers.push( {\n        watchExp: watchExp,\n        listener: listener || function() {}\n    } );\n};\n\nScope.prototype.$digest = function( ) {\n    var dirty;\n\n    do {\n            dirty = false;\n\n            for( var i = 0; i < this.$$watchers.length; i++ ) {\n                var newValue = this.$$watchers[i].watchExp(),\n                    oldValue = this.$$watchers[i].last;\n\n                if( oldValue !== newValue ) {\n                    this.$$watchers[i].listener(newValue, oldValue);\n\n                    dirty = true;\n\n                    this.$$watchers[i].last = newValue;\n                }\n            }\n    } while(dirty);\n};\n\n\nvar $scope = new Scope();\n\n$scope.name = 'Ryan';\n\nvar element = document.querySelectorAll('input');\n\nelement[0].onkeyup = function() {\n    $scope.name = element[0].value;\n\n    $scope.$digest();\n};\n\n$scope.$watch(function(){\n    return $scope.name;\n}, function( newValue, oldValue ) {\n    console.log('Input value updated - it is now ' + newValue);\n\n    element[0].value = $scope.name;\n} );\n\nvar updateScopeValue = function updateScopeValue( ) {\n    $scope.name = 'Bob';\n    $scope.$digest();\n};","position":{"start":{"line":154,"column":1,"offset":3977},"end":{"line":212,"column":4,"offset":5256},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"参考内容","position":{"start":{"line":214,"column":5,"offset":5262},"end":{"line":214,"column":9,"offset":5266},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":5258},"end":{"line":214,"column":9,"offset":5266},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://ryanclark.me/how-angularjs-implements-dirty-checking","children":[{"type":"text","value":"RyanClark:How AngularJS implements dirty checking and how to replicate it ourselves","position":{"start":{"line":216,"column":4,"offset":5271},"end":{"line":216,"column":87,"offset":5354},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":5270},"end":{"line":216,"column":150,"offset":5417},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":5270},"end":{"line":216,"column":150,"offset":5417},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":5268},"end":{"line":216,"column":150,"offset":5417},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://stackoverflow.com/questions/9682092/how-does-data-binding-work-in-angularjs","children":[{"type":"text","value":"stackoverflow:How does data binding work in AngularJS?","position":{"start":{"line":217,"column":4,"offset":5421},"end":{"line":217,"column":58,"offset":5475},"indent":[]}}],"position":{"start":{"line":217,"column":3,"offset":5420},"end":{"line":217,"column":143,"offset":5560},"indent":[]}}],"position":{"start":{"line":217,"column":3,"offset":5420},"end":{"line":217,"column":143,"offset":5560},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":5418},"end":{"line":217,"column":143,"offset":5560},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/xufei/blog/issues/10","children":[{"type":"text","value":"徐飞:Angular沉思录（一）","position":{"start":{"line":218,"column":4,"offset":5564},"end":{"line":218,"column":20,"offset":5580},"indent":[]}}],"position":{"start":{"line":218,"column":3,"offset":5563},"end":{"line":218,"column":62,"offset":5622},"indent":[]}}],"position":{"start":{"line":218,"column":3,"offset":5563},"end":{"line":218,"column":62,"offset":5622},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":5561},"end":{"line":218,"column":62,"offset":5622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://angular-tips.com/blog/2013/08/watch-how-the-apply-runs-a-digest/","children":[{"type":"text","value":"angular-tips:","position":{"start":{"line":219,"column":4,"offset":5626},"end":{"line":219,"column":17,"offset":5639},"indent":[]}},{"type":"inlineMath","value":"watch How the","data":{"hName":"span","hProperties":{"className":"inlineMath"},"hChildren":[{"type":"text","value":"watch How the"}]},"position":{"start":{"line":219,"column":17,"offset":5639},"end":{"line":219,"column":33,"offset":5655},"indent":[]}},{"type":"text","value":"apply Runs a $digest","position":{"start":{"line":219,"column":33,"offset":5655},"end":{"line":219,"column":53,"offset":5675},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":5625},"end":{"line":219,"column":127,"offset":5749},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":5625},"end":{"line":219,"column":127,"offset":5749},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":5623},"end":{"line":219,"column":127,"offset":5749},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.ibm.com/developerworks/cn/opensource/os-cn-AngularJS/","children":[{"type":"text","value":"IBM developerWorks:AngularJS 作用域与数据绑定机制","position":{"start":{"line":220,"column":4,"offset":5753},"end":{"line":220,"column":43,"offset":5792},"indent":[]}}],"position":{"start":{"line":220,"column":3,"offset":5752},"end":{"line":220,"column":111,"offset":5860},"indent":[]}}],"position":{"start":{"line":220,"column":3,"offset":5752},"end":{"line":220,"column":111,"offset":5860},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":5750},"end":{"line":220,"column":111,"offset":5860},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":5268},"end":{"line":220,"column":111,"offset":5860},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"How does data binding work in AngularJS\",\"date\":\"2016-06-05T15:28:00.000Z\",\"published\":true,\"cover\":\"./krzysztof-kowalik-9pFK1FR_5KQ-unsplash\",\"coverAuthor\":\"Krzysztof Kowalik\",\"coverOriginalUrl\":\"https://unsplash.com/photos/9pFK1FR_5KQ\"}","position":{"start":{"line":228,"column":1,"offset":5868},"end":{"line":228,"column":277,"offset":6144},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":228,"column":277,"offset":6144}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How does data binding work in AngularJS\",\n  \"date\": \"2016-06-05T15:28:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./krzysztof-kowalik-9pFK1FR_5KQ-unsplash\",\n  \"coverAuthor\": \"Krzysztof Kowalik\",\n  \"coverOriginalUrl\": \"https://unsplash.com/photos/9pFK1FR_5KQ\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"AngularJS \\u53EF\\u4EE5\\u8BB0\\u4F4F value \\u503C\\u5E76\\u4E14\\u4F1A\\u628A\\u5B83\\u548C\\u4E4B\\u524D\\u7684 value \\u503C\\u8FDB\\u884C\\u6BD4\\u8F83\\u3002\\u8FD9\\u5C31\\u662F\\u57FA\\u672C\\u7684\\u810F\\u68C0\\u67E5\\u673A\\u5236\\u3002\\u5982\\u679C\\u67D0\\u5904\\u7684value \\u503C\\u53D1\\u751F\\u4E86\\u53D8\\u5316\\uFF0C\\u90A3\\u4E48 AngularJS \\u5C31\\u4F1A\\u89E6\\u53D1\\u6307\\u5B9A\\u4E8B\\u4EF6\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply()\"), \"\\u8FD9\\u4E2A\\u65B9\\u6CD5\\u662F\\u7528\\u6765\\u5904\\u7406AngularJS\\u6846\\u67B6\\u4E4B\\u5916\\u7684\\u8868\\u8FBE\\u5F0F\\u7684\\uFF0C\\u4E0E\\u5B83\\u76F8\\u8F85\\u76F8\\u6210\\u7684\\u8FD8\\u6709\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest()\"), \"\\u65B9\\u6CD5\\u3002\\u4E00\\u6B21digest\\u5C31\\u662F\\u4E00\\u6B21\\u5B8C\\u5168\\u7684\\u810F\\u68C0\\u67E5\\uFF0C\\u5B83\\u53EF\\u4EE5\\u8FD0\\u884C\\u5728\\u6240\\u6709\\u7684\\u6D4F\\u89C8\\u5668\\u4E2D\\u3002\"), mdx(\"h3\", {\n    \"id\": \"关于watch\"\n  }, \"\\u5173\\u4E8E$watch\"), mdx(\"p\", null, \"\\u6BCF\\u4E00\\u6B21\\u4F60\\u5728UI\\u4E2D\\u7ED1\\u5B9A\\u4EC0\\u4E48\\u4E1C\\u897F\\u65F6\\u4F60\\u5C31\\u4F1A\\u5F80\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u7684\\u961F\\u5217\\u4E2D\\u63D2\\u5165\\u4E00\\u6761\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\uFF0C\\u60F3\\u8C61\\u4E00\\u4E0B$watch\\u5C31\\u662F\\u5728\\u6240\\u76D1\\u6D4B\\u7684model\\u4E2D\\u53EF\\u4EE5\\u4FA6\\u67E5\\u6570\\u636E\\u53D8\\u5316\\u7684\\u4E1C\\u897F\\u3002\\u6BD4\\u5982\\u8BF4\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"User\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"input type\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"text\\\"\"), \" ng\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"model\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"user\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\nPassword\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"input type\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"password\\\"\"), \" ng\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"model\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"pass\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u5728\\u8FD9\\u91CC\\u6211\\u4EEC\\u5206\\u522B\\u7ED9\\u4E24\\u4E2Ainput\\u7ED1\\u5B9A\\u4E86\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope.user\"), \"\\u548C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope.pass\"), \"\\uFF0C\\u5C31\\u662F\\u8BF4\\u6211\\u4EEC\\u5411\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u961F\\u5217\\u6DFB\\u52A0\\u4E86\\u4E24\\u4E2A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u3002\"), mdx(\"p\", null, \"\\u6BCF\\u4E00\\u4E2A\\u7ED1\\u5B9A\\u5230\\u4E86UI\\u4E0A\\u7684\\u6570\\u636E\\u90FD\\u4F1A\\u751F\\u6210\\u4E00\\u4E2A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\uFF0C\\u6211\\u4EEC\\u7684\\u6A21\\u677F\\u52A0\\u8F7D\\u5B8C\\u6210\\u65F6\\uFF0C\\u4E5F\\u5C31\\u662F\\u5728linking\\u9636\\u6BB5\\uFF0CAngular\\u89E3\\u91CA\\u5668\\u4F1A\\u5BFB\\u627E\\u6BCF\\u4E00\\u4E2Adirective\\u5E76\\u4E14\\u521B\\u9020\\u5B83\\u4EEC\\u6240\\u9700\\u7684\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u4E2Awatcher\\u5305\\u542B\\u4E86\\u4E09\\u4E2A\\u4E1C\\u897F\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5B83\\u6B63\\u5728\\u76D1\\u542C\\u7684\\u8868\\u8FBE\\u5F0F\\u3002\\u6709\\u53EF\\u80FD\\u662F\\u4E00\\u4E2A\\u7B80\\u5355\\u7684\\u5C5E\\u6027\\u540D\\uFF0C\\u4E5F\\u6709\\u53EF\\u80FD\\u662F\\u66F4\\u590D\\u6742\\u7684\\u4E1C\\u897F\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u8FD9\\u4E2A\\u8868\\u8FBE\\u5F0F\\u76EE\\u524D\\u5DF2\\u77E5\\u7684value\\u503C\\uFF0C\\u5B83\\u4F1A\\u4E0E\\u5F53\\u524D\\u6B63\\u5728\\u8BA1\\u7B97\\u7684\\u8868\\u8FBE\\u5F0Fvalue\\u503C\\u8FDB\\u884C\\u6838\\u5BF9\\u6BD4\\u8F83\\uFF0C\\u5982\\u679C\\u76D1\\u542C\\u5230value\\u503C\\u53D1\\u751F\\u4E86\\u6539\\u53D8\\u5C06\\u4F1A\\u89E6\\u53D1\\u51FD\\u6570\\u5E76\\u628A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u6807\\u8BB0\\u4E3A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"dirty\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u88AB\\u89E6\\u53D1\\u6267\\u884C\\u7684\\u51FD\\u6570\"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"$$watchers \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        eq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"false\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u8868\\u660E\\u6211\\u4EEC\\u662F\\u5426\\u9700\\u8981\\u68C0\\u67E5\\u5BF9\\u8C61\\u7EA7\\u522B\\u7684\\u76F8\\u7B49\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"fn\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u8FD9\\u662F\\u6211\\u4EEC\\u63D0\\u4F9B\\u7684\\u76D1\\u542C\\u5668\\u51FD\\u6570\"), \"\\n        last\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Ryan'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u53D8\\u91CF\\u7684\\u6700\\u65B0\\u503C\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"exp\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u6211\\u4EEC\\u63D0\\u4F9B\\u7684watchExp\\u51FD\\u6570\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"get\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Angular's\\u7F16\\u8BD1\\u540E\\u7684watchExp\\u51FD\\u6570\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u5B9A\\u4E49\\u76D1\\u542C\\u5668\\u7684\\u51E0\\u79CD\\u65B9\\u6CD5\\uFF1A\\n1.\\u628A$watch\\u8BBE\\u7F6E\\u4E3A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u7684\\u4E00\\u79CD\\u5C5E\\u6027:\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope.$watch('person.username', validateUnique);\"), \"\\n2.\\u63D2\\u5165angular\\u8868\\u8FBE\\u5F0F:\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<p>username: {{person.username}}</p>\"), \"\\n3.\\u4F7F\\u7528\\u7C7B\\u4F3C\\u4E8Eng-model\\u7684\\u6307\\u4EE4\\u6765\\u5B9A\\u4E49\\u76D1\\u542C\\u5668:\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<input ng-model=\\\"person.username />\")), mdx(\"h3\", {\n    \"id\": \"关于digest和apply\"\n  }, \"\\u5173\\u4E8E\", mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u548C\", mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\")), mdx(\"p\", null, \"\\u5982\\u679C\\u4F60\\u70B9\\u51FB\\u4E00\\u4E2A\\u6309\\u94AE\\uFF0C\\u6216\\u8005\\u5728\\u4E00\\u4E2Ainput\\u6846\\u4E2D\\u8F93\\u5165\\uFF0C\\u4E8B\\u4EF6\\u7684\\u56DE\\u8C03\\u51FD\\u6570\\u4F1A\\u5728javascript\\u4E2D\\u8FD0\\u884C\\uFF0C\\u5E76\\u4E14\\u4F60\\u53EF\\u4EE5\\u505A\\u4EFB\\u610F\\u7684DOM\\u64CD\\u4F5C\\uFF0C\\u5F53\\u56DE\\u8C03\\u51FD\\u6570\\u7ED3\\u675F\\u65F6\\uFF0C\\u6D4F\\u89C8\\u5668\\u4F1A\\u76F8\\u5E94\\u5730\\u5728DOM\\u4E2D\\u505A\\u51FA\\u6539\\u53D8\\u3002\"), mdx(\"p\", null, \"\\u5F53\\u4E00\\u4E2A\\u63A7\\u5236\\u5668/\\u6307\\u4EE4/\\u7B49\\u7B49\\u4E1C\\u897F\\u5728AngularJS\\u4E2D\\u8FD0\\u884C\\u65F6\\uFF0CAngularJS\\u5185\\u90E8\\u4F1A\\u8FD0\\u884C\\u4E00\\u4E2A\\u53EB\\u505A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope.$apply\"), \"\\u7684\\u51FD\\u6570\\u3002\\u8FD9\\u4E2A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u51FD\\u6570\\u4F1A\\u63A5\\u6536\\u4E00\\u4E2A\\u51FD\\u6570\\u4F5C\\u4E3A\\u53C2\\u6570\\u5E76\\u8FD0\\u884C\\u5B83\\uFF0C\\u5728\\u8FD9\\u4E4B\\u540E\\u624D\\u4F1A\\u5728rootScope\\u4E0A\\u8FD0\\u884C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u51FD\\u6570\\u3002\"), mdx(\"p\", null, \"AngularJS\\u7684\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u51FD\\u6570\\u4EE3\\u7801\\u5982\\u4E0B\\u6240\\u793A\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$apply\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"expr\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"try\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"beginPhase\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'$apply'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$eval\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"expr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"catch\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"e\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$exceptionHandler\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"e\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"finally\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"clearPhase\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"try\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        $rootScope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$digest\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"catch\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"e\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$exceptionHandler\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"e\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"throw\"), \" e\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u7531\\u6B64\\u53EF\\u89C1\\uFF0C\\u4F7F\\u7528\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u53EF\\u5E26\\u53C2\\u6570\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u51FD\\u6570\\u5C06\\u4F1A\\u5728\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$rootScope\"), \"\\u4E2D\\u88AB\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope.$apply\"), \"\\u6240\\u8C03\\u7528\\u3002\\u5B83\\u5C06\\u4F1A\\u5728\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$rootScope\"), \"\\u4E2D\\u8FD0\\u884Cdigest\\u5FAA\\u73AF\\uFF0C\\u7136\\u540E\\u5411\\u4E0B\\u904D\\u5386\\u6BCF\\u4E00\\u4E2A\\u4F5C\\u7528\\u57DF\\u5E76\\u5728\\u6BCF\\u4E2A\\u4F5C\\u7528\\u57DF\\u4E0A\\u8FD0\\u884C\\u5FAA\\u73AF\\u3002\\u5728\\u7B80\\u5355\\u7684\\u60C5\\u5F62\\u4E2D\\uFF0Cdigest\\u5FAA\\u73AF\\u5C06\\u4F1A\\u89E6\\u53D1\\u6240\\u6709\\u4F4D\\u4E8E\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$$watchers\"), \"\\u53D8\\u91CF\\u4E2D\\u7684\\u6240\\u6709watchExp\\u51FD\\u6570\\uFF0C\\u5C06\\u5B83\\u4EEC\\u548C\\u6700\\u65B0\\u7684\\u503C\\u8FDB\\u884C\\u5BF9\\u6BD4\\uFF0C\\u5982\\u679C\\u503C\\u4E0D\\u76F8\\u540C\\uFF0C\\u5C31\\u4F1A\\u89E6\\u53D1\\u76D1\\u542C\\u5668\\u3002\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u51FD\\u6570\\u68C0\\u67E5\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u961F\\u5217\\u4E2D\\u7684\\u6240\\u6709\\u76D1\\u542C\\u5668\\u6700\\u65B0\\u7684value\\u503C\\uFF0C\\u4E00\\u6B21\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u5FAA\\u73AF\\u662F\\u88AB\\u6307\\u4EE4\\u89E6\\u53D1\\u7684\\u3002\\u5982\\u679C\\u8868\\u8FBE\\u5F0F\\u65B0\\u7684value\\u503C\\u4E0E\\u4E4B\\u524D\\u4E0D\\u540C\\uFF0C\\u5C31\\u4F1A\\u8C03\\u7528\\u76D1\\u542C\\u5668\\u7684\\u51FD\\u6570\\uFF0C\\u8FD9\\u4E2A\\u51FD\\u6570\\u53EF\\u80FD\\u662F\\u91CD\\u65B0\\u7F16\\u8BD1\\u90E8\\u5206\\u7684DOM\\uFF0C\\u91CD\\u65B0\\u8BA1\\u7B97\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u7684\\u503C\\uFF0C\\u6FC0\\u6D3B\\u4E00\\u4E2AAJAX\\u8BF7\\u6C42\\uFF0C\\u6216\\u8005\\u4EFB\\u4F55\\u4F60\\u60F3\\u505A\\u7684\\u4E8B\\u3002\"), mdx(\"p\", null, \"\\u76D1\\u542C\\u5668\\u51FD\\u6570\\u53EF\\u4EE5\\u4FEE\\u6539\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u6216\\u662F\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u7236$scope\"), \"\\u7684\\u5176\\u4ED6\\u5C5E\\u6027\\uFF0C\\u4E00\\u65E6\\u6709\\u51FA\\u53D1\\u4E86\\u4E00\\u4E2A\\u76D1\\u542C\\u5668\\u51FD\\u6570\\uFF0C\\u6211\\u4EEC\\u5C31\\u65E0\\u6CD5\\u4FDD\\u8BC1\\u5176\\u5B83\\u7684\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u4E5F\\u662F\\u5E72\\u51C0\\u7684\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u4F1A\\u518D\\u6B21\\u6267\\u884C\\u6574\\u4E2Adigest\\u5FAA\\u73AF\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u4E0E\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u4F5C\\u7528\\u7C7B\\u4F3C\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u4F1A\\u4F7Fng\\u8FDB\\u5165\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest cycle\"), \", \\u5E76\\u4ECE\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$rootScope\"), \"\\u5F00\\u59CB\\u904D\\u5386(\\u6DF1\\u5EA6\\u4F18\\u5148)\\u68C0\\u67E5\\u6570\\u636E\\u53D8\\u66F4\\u3002\\u4E0D\\u540C\\u4E4B\\u5904\\u5728\\u4E8E\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$apply\"), \"\\u53EF\\u4EE5\\u5E26\\u53C2\\u6570\\uFF0C\\u5E76\\u4E14\\u4F1A\\u89E6\\u53D1\\u4F5C\\u7528\\u57DF\\u4E0A\\u7684\\u6240\\u6709\\u76D1\\u63A7\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u4EC5\\u4EC5\\u89E6\\u53D1\\u5F53\\u524D\\u4F5C\\u7528\\u57DF\\u548C\\u5B50\\u4F5C\\u7528\\u57DF\\u7684\\u76D1\\u63A7\\u3002\"), mdx(\"h3\", {\n    \"id\": \"build-your-own-dirty-checking\"\n  }, \"build your own dirty-checking\"), mdx(\"p\", null, \"\\u4E86\\u89E3\\u4EE5\\u4E0A\\u77E5\\u8BC6\\u540E\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u81EA\\u5DF1\\u5199\\u4E00\\u4E2A\\u5177\\u6709\\u57FA\\u672C\\u529F\\u80FD\\u7684\\u810F\\u68C0\\u6D4B\\u4E86\\u3002\\n\\u9996\\u5148\\u5B9A\\u4E49Scope\\uFF0C\\u7136\\u540E\\u6269\\u5C55\\u8FD9\\u4E2A\\u51FD\\u6570\\u7684\\u539F\\u578B\\u5BF9\\u8C61\\u6765\\u590D\\u5236\", \"$\", \"digest\\u548C\", \"$\", \"watch\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"Scope\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$watch\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$digest\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u8BBE\\u7F6E\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$watch\"), \"\\u51FD\\u6570\\uFF0C\\u5B83\\u63A5\\u6536watchExp\\u548Clistener\\u8FD9\\u4E24\\u4E2A\\u53C2\\u6570\\uFF0C\\u88AB\\u8C03\\u7528\\u65F6\\u6211\\u4EEC\\u4F1A\\u628A\\u5176push\\u5230\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$$watchers\"), \"\\u6570\\u7EC4\\u4E2D\\u3002\\u56E0\\u6B64\\u4EE3\\u7801\\u6269\\u5C55\\u4E3A\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$watch\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"watchExp\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" listener\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"push\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        watchExp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" watchExp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        listener\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" listener \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"||\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u5982\\u679C\\u6CA1\\u6709\\u4F20\\u5165listener\\u7684\\u8BDD\\u6211\\u4EEC\\u4F1A\\u628A\\u5B83\\u8BBE\\u7F6E\\u4E3A\\u7A7A\\u51FD\\u6570\\u3002\\n$digest\\u7528\\u6765\\u68C0\\u67E5\\u65B0\\u503C\\u65E7\\u503C\\u662F\\u5426\\u76F8\\u7B49\\uFF0C\\u5982\\u679C\\u4E0D\\u76F8\\u7B49\\u5219\\u89E6\\u53D1\\u76D1\\u542C\\u5668\\uFF0C\\u4E0D\\u65AD\\u5FAA\\u73AF\\u8FD9\\u4E2A\\u8FC7\\u7A0B\\uFF0C\\u76F4\\u5230\\u65B0\\u503C\\u65E7\\u503C\\u76F8\\u7B49\\u3002\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$digest\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" dirty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"do\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            dirty \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"false\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" newValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"watchExp\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n                    oldValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"last\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" oldValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!==\"), \" newValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n                    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"listener\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                    dirty \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"last \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"while\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dirty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u4E0B\\u4E00\\u6B65\\u6211\\u4EEC\\u9700\\u8981\\u521B\\u5EFA\\u4E00\\u4E2A\\u4F5C\\u7528\\u57DF\\u7684\\u5B9E\\u4F8B\\uFF0C\\u5E76\\u628A\\u5B9E\\u4F8B\\u8D4B\\u503C\\u7ED9$scope\\uFF0C\\u7136\\u540E\\u6CE8\\u518C\\u76D1\\u542C\\u51FD\\u6570\\uFF0C\\u4F7F\\u5F97\\u66F4\\u65B0\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$scope\"), \"\\u4E4B\\u540E\\u8FD0\\u884C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" $scope \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n$scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Ryan'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n$scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$watch\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n$scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$digest\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u6211\\u4EEC\\u53D1\\u73B0\\u5728\\u63A7\\u5236\\u53F0\\u8F93\\u51FA\\u4E86\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Ryan undefined\"), \"\\uFF0C\\u6210\\u529F\\u4E86\\uFF01\\n\\u6700\\u540E\\u6211\\u4EEC\\u53EF\\u4EE5\\u628A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$digest\"), \"\\u51FD\\u6570\\u7ED1\\u5B9A\\u5230\\u4E8B\\u4EF6\\u4E0A\\uFF0C\\u6BD4\\u5982input\\u5143\\u7D20\\u7684keyup\\u4E8B\\u4EF6\\uFF0C\\u5373\\u610F\\u5473\\u7740\\u6211\\u4EEC\\u53EF\\u4EE5\\u5B9E\\u73B0\\u53CC\\u5411\\u6570\\u636E\\u7ED1\\u5B9A\\uFF01\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"Scope\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$watch\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"watchExp\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" listener\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"push\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        watchExp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" watchExp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        listener\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" listener \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"||\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"prototype\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"$digest\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" dirty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"do\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            dirty \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"false\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" newValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"watchExp\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n                    oldValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"last\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" oldValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!==\"), \" newValue \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n                    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"listener\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                    dirty \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n                    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$$watchers\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"last \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"while\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dirty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" $scope \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Scope\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n$scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Ryan'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" element \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" document\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"querySelectorAll\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'input'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\nelement\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"onkeyup\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" element\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"value\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n    $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$digest\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n$scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$watch\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"newValue\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" oldValue\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Input value updated - it is now '\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" newValue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n    element\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"value \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"updateScopeValue\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"updateScopeValue\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Bob'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    $scope\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"$digest\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"参考内容\"\n  }, \"\\u53C2\\u8003\\u5185\\u5BB9\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ryanclark.me/how-angularjs-implements-dirty-checking\"\n  }), \"RyanClark:How AngularJS implements dirty checking and how to replicate it ourselves\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://stackoverflow.com/questions/9682092/how-does-data-binding-work-in-angularjs\"\n  }), \"stackoverflow:How does data binding work in AngularJS?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/xufei/blog/issues/10\"\n  }), \"\\u5F90\\u98DE:Angular\\u6C89\\u601D\\u5F55\\uFF08\\u4E00\\uFF09\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://angular-tips.com/blog/2013/08/watch-how-the-apply-runs-a-digest/\"\n  }), \"angular-tips:\", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"katex\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-mathml\"\n  }), mdx(\"math\", _extends({\n    parentName: \"span\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }), mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"w\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"a\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"t\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"c\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"h\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"H\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"o\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"w\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"t\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"h\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"e\")), mdx(\"annotation\", _extends({\n    parentName: \"semantics\"\n  }, {\n    \"encoding\": \"application/x-tex\"\n  }), \"watch How the\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.69444em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.02691em\"\n    }\n  }), \"w\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"c\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.08125em\"\n    }\n  }), \"H\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"o\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.02691em\"\n    }\n  }), \"w\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"e\")))), \"apply Runs a $digest\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.ibm.com/developerworks/cn/opensource/os-cn-AngularJS/\"\n  }), \"IBM developerWorks:AngularJS \\u4F5C\\u7528\\u57DF\\u4E0E\\u6570\\u636E\\u7ED1\\u5B9A\\u673A\\u5236\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"How does data binding work in AngularJS\",\n  \"date\": \"2016-06-05T15:28:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./krzysztof-kowalik-9pFK1FR_5KQ-unsplash\",\n  \"coverAuthor\": \"Krzysztof Kowalik\",\n  \"coverOriginalUrl\": \"https://unsplash.com/photos/9pFK1FR_5KQ\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`AngularJS 可以记住 value 值并且会把它和之前的 value 值进行比较。这就是基本的脏检查机制。如果某处的value 值发生了变化，那么 AngularJS 就会触发指定事件。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply()`}</code>{`这个方法是用来处理AngularJS框架之外的表达式的，与它相辅相成的还有`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest()`}</code>{`方法。一次digest就是一次完全的脏检查，它可以运行在所有的浏览器中。`}</p>\n    <h3 {...{\n      \"id\": \"关于watch\"\n    }}>{`关于$watch`}</h3>\n    <p>{`每一次你在UI中绑定什么东西时你就会往`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`的队列中插入一条`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`，想象一下$watch就是在所监测的model中可以侦查数据变化的东西。比如说：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`User`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`input type`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"text\"`}</span>{` ng`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`-`}</span>{`model`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"user\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`/`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`\nPassword`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`input type`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"password\"`}</span>{` ng`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`-`}</span>{`model`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"pass\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`/`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`在这里我们分别给两个input绑定了`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope.user`}</code>{`和`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope.pass`}</code>{`，就是说我们向`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`队列添加了两个`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`。`}</p>\n    <p>{`每一个绑定到了UI上的数据都会生成一个`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`，我们的模板加载完成时，也就是在linking阶段，Angular解释器会寻找每一个directive并且创造它们所需的`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`。`}</p>\n    <p>{`一个watcher包含了三个东西：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`它正在监听的表达式。有可能是一个简单的属性名，也有可能是更复杂的东西`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`这个表达式目前已知的value值，它会与当前正在计算的表达式value值进行核对比较，如果监听到value值发生了改变将会触发函数并把`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`$scope`}</code>{`标记为`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`dirty`}</code></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`被触发执行的函数`}</p>\n      </li>\n    </ul>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`$$watchers `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        eq`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`false`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 表明我们是否需要检查对象级别的相等`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`fn`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`newValue`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` oldValue`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 这是我们提供的监听器函数`}</span>{`\n        last`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Ryan'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 变量的最新值`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`exp`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 我们提供的watchExp函数`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`get`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Angular's编译后的watchExp函数`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`定义监听器的几种方法：\n1.把$watch设置为`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope`}</code>{`的一种属性:`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope.$watch('person.username', validateUnique);`}</code>{`\n2.插入angular表达式:`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`<p>username: {{person.username}}</p>`}</code>{`\n3.使用类似于ng-model的指令来定义监听器:`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`<input ng-model=\"person.username />`}</code></p>\n    <h3 {...{\n      \"id\": \"关于digest和apply\"\n    }}>{`关于`}<code parentName=\"h3\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`和`}<code parentName=\"h3\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code></h3>\n    <p>{`如果你点击一个按钮，或者在一个input框中输入，事件的回调函数会在javascript中运行，并且你可以做任意的DOM操作，当回调函数结束时，浏览器会相应地在DOM中做出改变。`}</p>\n    <p>{`当一个控制器/指令/等等东西在AngularJS中运行时，AngularJS内部会运行一个叫做`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope.$apply`}</code>{`的函数。这个`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`函数会接收一个函数作为参数并运行它，在这之后才会在rootScope上运行`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`函数。`}</p>\n    <p>{`AngularJS的`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`函数代码如下所示：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$apply`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`expr`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`try`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`beginPhase`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'$apply'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$eval`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`expr`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`catch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$exceptionHandler`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`finally`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`clearPhase`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`try`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        $rootScope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$digest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`catch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$exceptionHandler`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`throw`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`由此可见，使用`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`可带参数。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`函数将会在`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$rootScope`}</code>{`中被`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope.$apply`}</code>{`所调用。它将会在`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$rootScope`}</code>{`中运行digest循环，然后向下遍历每一个作用域并在每个作用域上运行循环。在简单的情形中，digest循环将会触发所有位于`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$$watchers`}</code>{`变量中的所有watchExp函数，将它们和最新的值进行对比，如果值不相同，就会触发监听器。`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`函数检查`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`队列中的所有监听器最新的value值，一次`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`循环是被指令触发的。如果表达式新的value值与之前不同，就会调用监听器的函数，这个函数可能是重新编译部分的DOM，重新计算`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope`}</code>{`的值，激活一个AJAX请求，或者任何你想做的事。`}</p>\n    <p>{`监听器函数可以修改`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope`}</code>{`或是`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`父$scope`}</code>{`的其他属性，一旦有出发了一个监听器函数，我们就无法保证其它的`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope`}</code>{`也是干净的，所以我们会再次执行整个digest循环。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`与`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`作用类似，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`会使ng进入`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest cycle`}</code>{`, 并从`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$rootScope`}</code>{`开始遍历(深度优先)检查数据变更。不同之处在于`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$apply`}</code>{`可以带参数，并且会触发作用域上的所有监控，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`仅仅触发当前作用域和子作用域的监控。`}</p>\n    <h3 {...{\n      \"id\": \"build-your-own-dirty-checking\"\n    }}>{`build your own dirty-checking`}</h3>\n    <p>{`了解以上知识后，我们可以自己写一个具有基本功能的脏检测了。\n首先定义Scope，然后扩展这个函数的原型对象来复制`}{`$`}{`digest和`}{`$`}{`watch`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`Scope`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$watch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$digest`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`设置`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$watch`}</code>{`函数，它接收watchExp和listener这两个参数，被调用时我们会把其push到`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$$watchers`}</code>{`数组中。因此代码扩展为：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$watch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`watchExp`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` listener`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`push`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        watchExp`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` watchExp`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        listener`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` listener `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`||`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`如果没有传入listener的话我们会把它设置为空函数。\n$digest用来检查新值旧值是否相等，如果不相等则触发监听器，不断循环这个过程，直到新值旧值相等。`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$digest`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` dirty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`do`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n            dirty `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`false`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`for`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`++`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` newValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`watchExp`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n                    oldValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`last`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` oldValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!==`}</span>{` newValue `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n                    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listener`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` oldValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                    dirty `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`last `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`while`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`dirty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`下一步我们需要创建一个作用域的实例，并把实例赋值给$scope，然后注册监听函数，使得更新`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$scope`}</code>{`之后运行`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code></p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` $scope `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n$scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Ryan'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n$scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$watch`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`newValue`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` oldValue`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` oldValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n$scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$digest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`我们发现在控制台输出了`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Ryan undefined`}</code>{`，成功了！\n最后我们可以把`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$digest`}</code>{`函数绑定到事件上，比如input元素的keyup事件，即意味着我们可以实现双向数据绑定！`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`Scope`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$watch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`watchExp`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` listener`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`push`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        watchExp`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` watchExp`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        listener`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` listener `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`||`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`prototype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`$digest`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` dirty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`do`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n            dirty `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`false`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`for`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`++`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` newValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`watchExp`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n                    oldValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`last`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` oldValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!==`}</span>{` newValue `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n                    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listener`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` oldValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                    dirty `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n                    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$$watchers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`last `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n                `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`while`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`dirty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` $scope `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Scope`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n$scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Ryan'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` element `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` document`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`querySelectorAll`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'input'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nelement`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`onkeyup`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` element`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$digest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n$scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$watch`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`newValue`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` oldValue`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Input value updated - it is now '`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` newValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    element`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`value `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`updateScopeValue`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`updateScopeValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Bob'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    $scope`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`$digest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"参考内容\"\n    }}>{`参考内容`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://ryanclark.me/how-angularjs-implements-dirty-checking\"\n        }}>{`RyanClark:How AngularJS implements dirty checking and how to replicate it ourselves`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://stackoverflow.com/questions/9682092/how-does-data-binding-work-in-angularjs\"\n        }}>{`stackoverflow:How does data binding work in AngularJS?`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/xufei/blog/issues/10\"\n        }}>{`徐飞:Angular沉思录（一）`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://angular-tips.com/blog/2013/08/watch-how-the-apply-runs-a-digest/\"\n        }}>{`angular-tips:`}<span parentName=\"a\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`w`}</mi><mi parentName=\"mrow\">{`a`}</mi><mi parentName=\"mrow\">{`t`}</mi><mi parentName=\"mrow\">{`c`}</mi><mi parentName=\"mrow\">{`h`}</mi><mi parentName=\"mrow\">{`H`}</mi><mi parentName=\"mrow\">{`o`}</mi><mi parentName=\"mrow\">{`w`}</mi><mi parentName=\"mrow\">{`t`}</mi><mi parentName=\"mrow\">{`h`}</mi><mi parentName=\"mrow\">{`e`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`watch How the`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.69444em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.02691em\"\n                  }\n                }}>{`w`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`t`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`c`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`h`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.08125em\"\n                  }\n                }}>{`H`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`o`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.02691em\"\n                  }\n                }}>{`w`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`t`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`h`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`e`}</span></span></span></span>{`apply Runs a $digest`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/developerworks/cn/opensource/os-cn-AngularJS/\"\n        }}>{`IBM developerWorks:AngularJS 作用域与数据绑定机制`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}