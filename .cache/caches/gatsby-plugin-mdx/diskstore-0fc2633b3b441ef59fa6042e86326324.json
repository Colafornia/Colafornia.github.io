{"expireTime":9007200825610621000,"key":"gatsby-plugin-mdx-entire-payload-5e074f51d8a38d018259c87a44019ed8-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.dailymail.co.uk/i/pix/2016/10/27/21/39C8A74600000578-3879480-The_touch_bar_can_display_emotions_in_messaging_apps_playback_co-a-5_1477598860842.jpg","alt":"cover","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":168,"offset":169},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":168,"offset":169},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"作为编程知识基础中的基础，有必要消化整理输出一次。","position":{"start":{"line":5,"column":1,"offset":171},"end":{"line":5,"column":26,"offset":196},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":171},"end":{"line":5,"column":26,"offset":196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"本文主要介绍了字符编码的几个重要基础概念，从 ","position":{"start":{"line":7,"column":1,"offset":198},"end":{"line":7,"column":24,"offset":221},"indent":[]}},{"type":"inlineCode","value":"ASCII","position":{"start":{"line":7,"column":24,"offset":221},"end":{"line":7,"column":31,"offset":228},"indent":[]}},{"type":"text","value":" 到 ","position":{"start":{"line":7,"column":31,"offset":228},"end":{"line":7,"column":34,"offset":231},"indent":[]}},{"type":"inlineCode","value":"Unicode","position":{"start":{"line":7,"column":34,"offset":231},"end":{"line":7,"column":43,"offset":240},"indent":[]}},{"type":"text","value":" 再到 ","position":{"start":{"line":7,"column":43,"offset":240},"end":{"line":7,"column":47,"offset":244},"indent":[]}},{"type":"inlineCode","value":"Emoji","position":{"start":{"line":7,"column":47,"offset":244},"end":{"line":7,"column":54,"offset":251},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":7,"column":54,"offset":251},"end":{"line":7,"column":57,"offset":254},"indent":[]}},{"type":"inlineCode","value":"JavaScript","position":{"start":{"line":7,"column":57,"offset":254},"end":{"line":7,"column":69,"offset":266},"indent":[]}},{"type":"text","value":" 字符处理的一些坑。","position":{"start":{"line":7,"column":69,"offset":266},"end":{"line":7,"column":79,"offset":276},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":198},"end":{"line":7,"column":79,"offset":276},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"基础概念","position":{"start":{"line":9,"column":5,"offset":282},"end":{"line":9,"column":9,"offset":286},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":278},"end":{"line":9,"column":9,"offset":286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"由于计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字。计算机中，","position":{"start":{"line":11,"column":1,"offset":288},"end":{"line":11,"column":39,"offset":326},"indent":[]}},{"type":"inlineCode","value":"字节（byte）","position":{"start":{"line":11,"column":39,"offset":326},"end":{"line":11,"column":49,"offset":336},"indent":[]}},{"type":"text","value":" 是一个 ","position":{"start":{"line":11,"column":49,"offset":336},"end":{"line":11,"column":54,"offset":341},"indent":[]}},{"type":"inlineCode","value":"8bit","position":{"start":{"line":11,"column":54,"offset":341},"end":{"line":11,"column":60,"offset":347},"indent":[]}},{"type":"text","value":" 的储存单元，一个字节能表示的最大的整数就是 255（二进制的11111111 = 十进制255），如果要表示更大的整数，就必须用更多的字节。","position":{"start":{"line":11,"column":60,"offset":347},"end":{"line":11,"column":131,"offset":418},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":288},"end":{"line":11,"column":131,"offset":418},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"字符集","position":{"start":{"line":13,"column":6,"offset":425},"end":{"line":13,"column":9,"offset":428},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":420},"end":{"line":13,"column":9,"offset":428},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"字符是文字与符号的总称，它是一个信息单位。字符集就是字符的集合。","position":{"start":{"line":15,"column":1,"offset":430},"end":{"line":15,"column":33,"offset":462},"indent":[]}},{"type":"inlineCode","value":"ASCII码","position":{"start":{"line":15,"column":33,"offset":462},"end":{"line":15,"column":41,"offset":470},"indent":[]}},{"type":"text","value":"（American Standard Code for Information Interchange）就是一个字符集，这个集合中只有数字，英文字母和一些符号共 127 个字符。如果我们想处理中文、日文文本，仅通过 ","position":{"start":{"line":15,"column":41,"offset":470},"end":{"line":15,"column":149,"offset":578},"indent":[]}},{"type":"inlineCode","value":"ASCII码","position":{"start":{"line":15,"column":149,"offset":578},"end":{"line":15,"column":157,"offset":586},"indent":[]}},{"type":"text","value":" 就做不到了。在历史中由于眼光的局限性，出现了一些仅能处理部分字符的字符集，无法通用。","position":{"start":{"line":15,"column":157,"offset":586},"end":{"line":15,"column":200,"offset":629},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":430},"end":{"line":15,"column":200,"offset":629},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2018/09/03/5b8d2209e4247.jpg","alt":null,"position":{"start":{"line":17,"column":1,"offset":631},"end":{"line":17,"column":53,"offset":683},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":631},"end":{"line":17,"column":53,"offset":683},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"字符编码","position":{"start":{"line":21,"column":6,"offset":692},"end":{"line":21,"column":10,"offset":696},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":687},"end":{"line":21,"column":10,"offset":696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"字符编码规定了字符集和实际存储的二进制数值之间的转换关系。一般来说，每个字符集都有其对应的字符编码方式（有的字符集有一个对应字符编码，有的则有多个）。像 ","position":{"start":{"line":23,"column":1,"offset":698},"end":{"line":23,"column":78,"offset":775},"indent":[]}},{"type":"inlineCode","value":"ASCII","position":{"start":{"line":23,"column":78,"offset":775},"end":{"line":23,"column":85,"offset":782},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":23,"column":85,"offset":782},"end":{"line":23,"column":88,"offset":785},"indent":[]}},{"type":"inlineCode","value":"GB18030","position":{"start":{"line":23,"column":88,"offset":785},"end":{"line":23,"column":97,"offset":794},"indent":[]}},{"type":"text","value":" 都仅有一种编码实现，因此既可以作为字符集的名字，也可以用来指代它们的字符编码。","position":{"start":{"line":23,"column":97,"offset":794},"end":{"line":23,"column":137,"offset":834},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":698},"end":{"line":23,"column":137,"offset":834},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"通过以上概念的介绍不难窥探在字符编码的历史中存在以下痛点：","position":{"start":{"line":26,"column":1,"offset":837},"end":{"line":26,"column":30,"offset":866},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":837},"end":{"line":26,"column":30,"offset":866},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"字符集不够通用，总有覆盖不到的字符","position":{"start":{"line":28,"column":4,"offset":871},"end":{"line":28,"column":21,"offset":888},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":871},"end":{"line":28,"column":21,"offset":888},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":868},"end":{"line":28,"column":21,"offset":888},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"新的字符集难以向下兼容老的","position":{"start":{"line":29,"column":4,"offset":892},"end":{"line":29,"column":17,"offset":905},"indent":[]}}],"position":{"start":{"line":29,"column":4,"offset":892},"end":{"line":29,"column":17,"offset":905},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":889},"end":{"line":29,"column":17,"offset":905},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"覆盖更多字符的字符集，难以避免需要更多字节，如果我们的文本仅通过 ","position":{"start":{"line":30,"column":4,"offset":909},"end":{"line":30,"column":37,"offset":942},"indent":[]}},{"type":"inlineCode","value":"ASCII","position":{"start":{"line":30,"column":37,"offset":942},"end":{"line":30,"column":44,"offset":949},"indent":[]}},{"type":"text","value":" 就能处理的话，使用占用字节更多的字符集在储存和传输都不划算","position":{"start":{"line":30,"column":44,"offset":949},"end":{"line":30,"column":74,"offset":979},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":909},"end":{"line":30,"column":74,"offset":979},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":906},"end":{"line":30,"column":74,"offset":979},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":868},"end":{"line":30,"column":74,"offset":979},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这些问题都由 ","position":{"start":{"line":32,"column":1,"offset":981},"end":{"line":32,"column":8,"offset":988},"indent":[]}},{"type":"inlineCode","value":"Unicode","position":{"start":{"line":32,"column":8,"offset":988},"end":{"line":32,"column":17,"offset":997},"indent":[]}},{"type":"text","value":" 及其字符编码一起打包解决了。","position":{"start":{"line":32,"column":17,"offset":997},"end":{"line":32,"column":32,"offset":1012},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":981},"end":{"line":32,"column":32,"offset":1012},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Unicode","position":{"start":{"line":35,"column":5,"offset":1019},"end":{"line":35,"column":12,"offset":1026},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1015},"end":{"line":35,"column":12,"offset":1026},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Unicode","children":[{"type":"text","value":"Unicode","position":{"start":{"line":37,"column":2,"offset":1029},"end":{"line":37,"column":9,"offset":1036},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1028},"end":{"line":37,"column":49,"offset":1076},"indent":[]}},{"type":"text","value":" 是一个","position":{"start":{"line":37,"column":49,"offset":1076},"end":{"line":37,"column":53,"offset":1080},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"字符集","position":{"start":{"line":37,"column":55,"offset":1082},"end":{"line":37,"column":58,"offset":1085},"indent":[]}}],"position":{"start":{"line":37,"column":53,"offset":1080},"end":{"line":37,"column":60,"offset":1087},"indent":[]}},{"type":"text","value":"，旨于涵盖所有国家语言中可能出现的符号与文字，是目前绝大多数程序使用的字符编码。","position":{"start":{"line":37,"column":60,"offset":1087},"end":{"line":37,"column":100,"offset":1127},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1028},"end":{"line":37,"column":100,"offset":1127},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Unicode","position":{"start":{"line":39,"column":1,"offset":1129},"end":{"line":39,"column":10,"offset":1138},"indent":[]}},{"type":"text","value":"的诞生也不是一蹴而就，也有历史过程。","position":{"start":{"line":39,"column":10,"offset":1138},"end":{"line":39,"column":28,"offset":1156},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1129},"end":{"line":39,"column":28,"offset":1156},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"历史进程","position":{"start":{"line":41,"column":6,"offset":1163},"end":{"line":41,"column":10,"offset":1167},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1158},"end":{"line":41,"column":10,"offset":1167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"（这段不是用来凑数的，这几个英文简写后面还会一直出现，知道了历史更方便记忆分辨）","position":{"start":{"line":43,"column":1,"offset":1169},"end":{"line":43,"column":41,"offset":1209},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1169},"end":{"line":43,"column":41,"offset":1209},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ISO 与 IEC 分别推出了 ","position":{"start":{"line":45,"column":1,"offset":1211},"end":{"line":45,"column":17,"offset":1227},"indent":[]}},{"type":"inlineCode","value":"Unicode","position":{"start":{"line":45,"column":17,"offset":1227},"end":{"line":45,"column":26,"offset":1236},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":45,"column":26,"offset":1236},"end":{"line":45,"column":29,"offset":1239},"indent":[]}},{"type":"inlineCode","value":"UCS","position":{"start":{"line":45,"column":29,"offset":1239},"end":{"line":45,"column":34,"offset":1244},"indent":[]}},{"type":"text","value":"（Universal Multiple-Octet Coded Character Set） 。后来（只过了一年），两者进行整合，到了 Unicode2.0 时代，Unicode 的编码和 UCS 的编码都完全一致。","position":{"start":{"line":45,"column":34,"offset":1244},"end":{"line":45,"column":142,"offset":1352},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1211},"end":{"line":45,"column":142,"offset":1352},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"USC","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":6,"offset":1359},"indent":[]}},{"type":"text","value":" 这个名字也并未从此消失在历史中。","position":{"start":{"line":47,"column":6,"offset":1359},"end":{"line":47,"column":23,"offset":1376},"indent":[]}},{"type":"inlineCode","value":"UCS","position":{"start":{"line":47,"column":23,"offset":1376},"end":{"line":47,"column":28,"offset":1381},"indent":[]}},{"type":"text","value":" 标准有自己的格式，如","position":{"start":{"line":47,"column":28,"offset":1381},"end":{"line":47,"column":39,"offset":1392},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":47,"column":39,"offset":1392},"end":{"line":47,"column":46,"offset":1399},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":47,"column":46,"offset":1399},"end":{"line":47,"column":47,"offset":1400},"indent":[]}},{"type":"inlineCode","value":"UCS-4","position":{"start":{"line":47,"column":47,"offset":1400},"end":{"line":47,"column":54,"offset":1407},"indent":[]}},{"type":"text","value":"等等 而 Unicode 也有自己的不同编码实现，如","position":{"start":{"line":47,"column":54,"offset":1407},"end":{"line":47,"column":80,"offset":1433},"indent":[]}},{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":47,"column":80,"offset":1433},"end":{"line":47,"column":87,"offset":1440},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":47,"column":87,"offset":1440},"end":{"line":47,"column":88,"offset":1441},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":47,"column":88,"offset":1441},"end":{"line":47,"column":96,"offset":1449},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":47,"column":96,"offset":1449},"end":{"line":47,"column":97,"offset":1450},"indent":[]}},{"type":"inlineCode","value":"UTF-32","position":{"start":{"line":47,"column":97,"offset":1450},"end":{"line":47,"column":105,"offset":1458},"indent":[]}},{"type":"text","value":"等等。","position":{"start":{"line":47,"column":105,"offset":1458},"end":{"line":47,"column":108,"offset":1461},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":108,"offset":1461},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"关于 Unicode 自己","position":{"start":{"line":49,"column":6,"offset":1468},"end":{"line":49,"column":19,"offset":1481},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1463},"end":{"line":49,"column":19,"offset":1481},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"码点 code point","position":{"start":{"line":51,"column":1,"offset":1483},"end":{"line":51,"column":16,"offset":1498},"indent":[]}},{"type":"text","value":" 是指在 Unicode 字符集中字符的值，根据 Unicode 标准，是前缀为 ","position":{"start":{"line":51,"column":16,"offset":1498},"end":{"line":51,"column":57,"offset":1539},"indent":[]}},{"type":"inlineCode","value":"U+","position":{"start":{"line":51,"column":57,"offset":1539},"end":{"line":51,"column":61,"offset":1543},"indent":[]}},{"type":"text","value":" 的十六进制数字。","position":{"start":{"line":51,"column":61,"offset":1543},"end":{"line":51,"column":70,"offset":1552},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1483},"end":{"line":51,"column":70,"offset":1552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unicode 字符分为 17 组平面（plane），每个平面拥有 2^16 (65,536) 个码点。每一个码点都可以用 16 进制 xy0000 到 xyFFFF 来表示，这里的 xy 是表示一个 16 进制的值，从 00 到 10。目前我们常用字符大多都在 BMP 基本平面中。","position":{"start":{"line":53,"column":1,"offset":1554},"end":{"line":53,"column":143,"offset":1696},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1554},"end":{"line":53,"column":143,"offset":1696},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://s1.ax1x.com/2018/08/29/PXQfOA.png","alt":"plane","position":{"start":{"line":55,"column":1,"offset":1698},"end":{"line":55,"column":52,"offset":1749},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1698},"end":{"line":55,"column":52,"offset":1749},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"字节序与 BOM","position":{"start":{"line":57,"column":6,"offset":1756},"end":{"line":57,"column":14,"offset":1764},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1751},"end":{"line":57,"column":14,"offset":1764},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在了解 Unicode 的字符编码之前，还需要了解一个关于 ","position":{"start":{"line":59,"column":1,"offset":1766},"end":{"line":59,"column":31,"offset":1796},"indent":[]}},{"type":"inlineCode","value":"字节序","position":{"start":{"line":59,"column":31,"offset":1796},"end":{"line":59,"column":36,"offset":1801},"indent":[]}},{"type":"text","value":" 的知识。","position":{"start":{"line":59,"column":36,"offset":1801},"end":{"line":59,"column":41,"offset":1806},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1766},"end":{"line":59,"column":41,"offset":1806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"计算机硬件有两种储存数据的方式：","position":{"start":{"line":61,"column":1,"offset":1808},"end":{"line":61,"column":17,"offset":1824},"indent":[]}},{"type":"inlineCode","value":"大端","position":{"start":{"line":61,"column":17,"offset":1824},"end":{"line":61,"column":21,"offset":1828},"indent":[]}},{"type":"text","value":"字节序（big endian）和","position":{"start":{"line":61,"column":21,"offset":1828},"end":{"line":61,"column":37,"offset":1844},"indent":[]}},{"type":"inlineCode","value":"小端","position":{"start":{"line":61,"column":37,"offset":1844},"end":{"line":61,"column":41,"offset":1848},"indent":[]}},{"type":"text","value":"字节序（little endian）。","position":{"start":{"line":61,"column":41,"offset":1848},"end":{"line":61,"column":60,"offset":1867},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1808},"end":{"line":61,"column":60,"offset":1867},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"大端字节序：高位字节在前，低位字节在后","position":{"start":{"line":63,"column":3,"offset":1871},"end":{"line":63,"column":22,"offset":1890},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":1871},"end":{"line":63,"column":22,"offset":1890},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1869},"end":{"line":63,"column":22,"offset":1890},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"小端字节序：低位字节在前，高位字节在后","position":{"start":{"line":64,"column":3,"offset":1893},"end":{"line":64,"column":22,"offset":1912},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":1893},"end":{"line":64,"column":22,"offset":1912},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1891},"end":{"line":64,"column":22,"offset":1912},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1869},"end":{"line":64,"column":22,"offset":1912},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"因此，","position":{"start":{"line":66,"column":1,"offset":1914},"end":{"line":66,"column":4,"offset":1917},"indent":[]}},{"type":"inlineCode","value":"0x1234567","position":{"start":{"line":66,"column":4,"offset":1917},"end":{"line":66,"column":15,"offset":1928},"indent":[]}},{"type":"text","value":" 的大端字节序和小端字节序的写法如下图：","position":{"start":{"line":66,"column":15,"offset":1928},"end":{"line":66,"column":35,"offset":1948},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1914},"end":{"line":66,"column":35,"offset":1948},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://www.ruanyifeng.com/blogimg/asset/2016/bg2016112201.gif","alt":null,"position":{"start":{"line":68,"column":1,"offset":1950},"end":{"line":68,"column":68,"offset":2017},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1950},"end":{"line":68,"column":68,"offset":2017},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"字节序的存在主要是因为计算机电路先处理低位字节，因为计算都是从低位开始的。但是，人类还是习惯读写大端字节序。所以，除了计算机的内部处理，其他的场合几乎都是大端字节序，比如网络传输和文件储存。","position":{"start":{"line":70,"column":1,"offset":2019},"end":{"line":70,"column":96,"offset":2114},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2019},"end":{"line":70,"column":96,"offset":2114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unicode 规范中推荐的标记字节顺序的方法是 ","position":{"start":{"line":72,"column":1,"offset":2116},"end":{"line":72,"column":26,"offset":2141},"indent":[]}},{"type":"inlineCode","value":"BOM","position":{"start":{"line":72,"column":26,"offset":2141},"end":{"line":72,"column":31,"offset":2146},"indent":[]}},{"type":"text","value":"（Byte Order Mark）。有一个叫做\"零宽度非换行空格（ZERO WIDTH NO-BREAK SPACE）\"的字符，它的编码是 ","position":{"start":{"line":72,"column":31,"offset":2146},"end":{"line":72,"column":101,"offset":2216},"indent":[]}},{"type":"inlineCode","value":"FEFF","position":{"start":{"line":72,"column":101,"offset":2216},"end":{"line":72,"column":107,"offset":2222},"indent":[]}},{"type":"text","value":"。而 ","position":{"start":{"line":72,"column":107,"offset":2222},"end":{"line":72,"column":110,"offset":2225},"indent":[]}},{"type":"inlineCode","value":"FFFE","position":{"start":{"line":72,"column":110,"offset":2225},"end":{"line":72,"column":116,"offset":2231},"indent":[]}},{"type":"text","value":" 在 UCS 中是不存在的字符，所以不应该出现在实际传输中。Unicode 规范中定义每个文件的最前面加入这个零宽度非换行空格字符，如果一个文本文件的头两个字节是 ","position":{"start":{"line":72,"column":116,"offset":2231},"end":{"line":72,"column":198,"offset":2313},"indent":[]}},{"type":"inlineCode","value":"FE FF","position":{"start":{"line":72,"column":198,"offset":2313},"end":{"line":72,"column":205,"offset":2320},"indent":[]}},{"type":"text","value":"，就表示该文件采用大端方式；如果头两个字节是","position":{"start":{"line":72,"column":205,"offset":2320},"end":{"line":72,"column":227,"offset":2342},"indent":[]}},{"type":"inlineCode","value":"FF FE","position":{"start":{"line":72,"column":227,"offset":2342},"end":{"line":72,"column":234,"offset":2349},"indent":[]}},{"type":"text","value":"，就表示该文件采用小端方式。","position":{"start":{"line":72,"column":234,"offset":2349},"end":{"line":72,"column":248,"offset":2363},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2116},"end":{"line":72,"column":248,"offset":2363},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"需要清楚的是，","position":{"start":{"line":74,"column":1,"offset":2365},"end":{"line":74,"column":8,"offset":2372},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"不是所有的东西都有字节序","position":{"start":{"line":74,"column":10,"offset":2374},"end":{"line":74,"column":22,"offset":2386},"indent":[]}}],"position":{"start":{"line":74,"column":8,"offset":2372},"end":{"line":74,"column":24,"offset":2388},"indent":[]}},{"type":"text","value":"，而且字符序是以单字节为单位的顺序问题。","position":{"start":{"line":74,"column":24,"offset":2388},"end":{"line":74,"column":44,"offset":2408},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2365},"end":{"line":74,"column":44,"offset":2408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"前面提到 ","position":{"start":{"line":76,"column":1,"offset":2410},"end":{"line":76,"column":6,"offset":2415},"indent":[]}},{"type":"inlineCode","value":"Unicode","position":{"start":{"line":76,"column":6,"offset":2415},"end":{"line":76,"column":15,"offset":2424},"indent":[]}},{"type":"text","value":" 有多种字符编码实现方式，我们主要介绍 ","position":{"start":{"line":76,"column":15,"offset":2424},"end":{"line":76,"column":35,"offset":2444},"indent":[]}},{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":76,"column":35,"offset":2444},"end":{"line":76,"column":42,"offset":2451},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":76,"column":42,"offset":2451},"end":{"line":76,"column":45,"offset":2454},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":76,"column":45,"offset":2454},"end":{"line":76,"column":52,"offset":2461},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":76,"column":52,"offset":2461},"end":{"line":76,"column":53,"offset":2462},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2410},"end":{"line":76,"column":53,"offset":2462},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"UTF-8","position":{"start":{"line":78,"column":6,"offset":2469},"end":{"line":78,"column":11,"offset":2474},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2464},"end":{"line":78,"column":11,"offset":2474},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":80,"column":1,"offset":2476},"end":{"line":80,"column":8,"offset":2483},"indent":[]}},{"type":"text","value":" 作为最常见的 Unicode 实现方式，解决了前面提到的字符编码几大痛点。","position":{"start":{"line":80,"column":8,"offset":2483},"end":{"line":80,"column":46,"offset":2521},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2476},"end":{"line":80,"column":46,"offset":2521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":82,"column":1,"offset":2523},"end":{"line":82,"column":2,"offset":2524},"indent":[]}},{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":82,"column":2,"offset":2524},"end":{"line":82,"column":9,"offset":2531},"indent":[]}},{"type":"text","value":" 编码是","position":{"start":{"line":82,"column":9,"offset":2531},"end":{"line":82,"column":13,"offset":2535},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"变长编码","position":{"start":{"line":82,"column":15,"offset":2537},"end":{"line":82,"column":19,"offset":2541},"indent":[]}}],"position":{"start":{"line":82,"column":13,"offset":2535},"end":{"line":82,"column":21,"offset":2543},"indent":[]}},{"type":"text","value":"，用 1 到 6 个字节编码，完全兼容 ","position":{"start":{"line":82,"column":21,"offset":2543},"end":{"line":82,"column":41,"offset":2563},"indent":[]}},{"type":"inlineCode","value":"ASCII","position":{"start":{"line":82,"column":41,"offset":2563},"end":{"line":82,"column":48,"offset":2570},"indent":[]}},{"type":"text","value":" 码，对于 ASCII 涵盖的那些字符，单字节实现，其余大多数为三字节实现。对于以英文为主的文本非常友好，最节省存储空间。缺点主要在于","position":{"start":{"line":82,"column":48,"offset":2570},"end":{"line":82,"column":115,"offset":2637},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2523},"end":{"line":82,"column":115,"offset":2637},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":84,"column":1,"offset":2639},"end":{"line":84,"column":8,"offset":2646},"indent":[]}},{"type":"text","value":" 编码通过多个字节组合的方式来显示，这是计算机处理","position":{"start":{"line":84,"column":8,"offset":2646},"end":{"line":84,"column":33,"offset":2671},"indent":[]}},{"type":"inlineCode","value":"UTF-8","position":{"start":{"line":84,"column":33,"offset":2671},"end":{"line":84,"column":40,"offset":2678},"indent":[]}},{"type":"text","value":" 的机制，它是无字节序之分的。","position":{"start":{"line":84,"column":40,"offset":2678},"end":{"line":84,"column":55,"offset":2693},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2639},"end":{"line":84,"column":55,"offset":2693},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"UTF 家族还有 ","position":{"start":{"line":86,"column":1,"offset":2695},"end":{"line":86,"column":10,"offset":2704},"indent":[]}},{"type":"inlineCode","value":"UTF-16（双字节）","position":{"start":{"line":86,"column":10,"offset":2704},"end":{"line":86,"column":23,"offset":2717},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":86,"column":23,"offset":2717},"end":{"line":86,"column":26,"offset":2720},"indent":[]}},{"type":"inlineCode","value":"UTF-32（四字节）","position":{"start":{"line":86,"column":26,"offset":2720},"end":{"line":86,"column":39,"offset":2733},"indent":[]}},{"type":"text","value":" 实现，两者都有字节序问题，前者更适合汉字编码但不支持单字节的 ","position":{"start":{"line":86,"column":39,"offset":2733},"end":{"line":86,"column":71,"offset":2765},"indent":[]}},{"type":"inlineCode","value":"ASCII","position":{"start":{"line":86,"column":71,"offset":2765},"end":{"line":86,"column":78,"offset":2772},"indent":[]}},{"type":"text","value":"，后者由于浪费储存空间很不常见，HTML5 中明确规定禁止使用 UTF-32 编码。","position":{"start":{"line":86,"column":78,"offset":2772},"end":{"line":86,"column":120,"offset":2814},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2695},"end":{"line":86,"column":120,"offset":2814},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"UCS-2","position":{"start":{"line":88,"column":6,"offset":2821},"end":{"line":88,"column":11,"offset":2826},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2816},"end":{"line":88,"column":11,"offset":2826},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript 设计之初，还没有出现 ","position":{"start":{"line":90,"column":1,"offset":2828},"end":{"line":90,"column":23,"offset":2850},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":90,"column":23,"offset":2850},"end":{"line":90,"column":31,"offset":2858},"indent":[]}},{"type":"text","value":"，因此采用的是 ","position":{"start":{"line":90,"column":31,"offset":2858},"end":{"line":90,"column":39,"offset":2866},"indent":[]}},{"type":"inlineCode","value":"USC-2","position":{"start":{"line":90,"column":39,"offset":2866},"end":{"line":90,"column":46,"offset":2873},"indent":[]}},{"type":"text","value":" 编码。前面提到 ","position":{"start":{"line":90,"column":46,"offset":2873},"end":{"line":90,"column":55,"offset":2882},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Unicode 的编码和 UCS 的编码都完全一致","position":{"start":{"line":90,"column":57,"offset":2884},"end":{"line":90,"column":82,"offset":2909},"indent":[]}}],"position":{"start":{"line":90,"column":55,"offset":2882},"end":{"line":90,"column":84,"offset":2911},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":90,"column":84,"offset":2911},"end":{"line":90,"column":85,"offset":2912},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":90,"column":85,"offset":2912},"end":{"line":90,"column":92,"offset":2919},"indent":[]}},{"type":"text","value":" 是一种定长的编码方式，用两位字节来表示一位码位。","position":{"start":{"line":90,"column":92,"offset":2919},"end":{"line":90,"column":117,"offset":2944},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2828},"end":{"line":90,"column":117,"offset":2944},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":92,"column":1,"offset":2946},"end":{"line":92,"column":9,"offset":2954},"indent":[]}},{"type":"text","value":" 可看成是 ","position":{"start":{"line":92,"column":9,"offset":2954},"end":{"line":92,"column":15,"offset":2960},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":92,"column":15,"offset":2960},"end":{"line":92,"column":22,"offset":2967},"indent":[]}},{"type":"text","value":" 的父集。在没有","position":{"start":{"line":92,"column":22,"offset":2967},"end":{"line":92,"column":30,"offset":2975},"indent":[]}},{"type":"inlineCode","value":"辅助平面字符（surrogate code points）","position":{"start":{"line":92,"column":30,"offset":2975},"end":{"line":92,"column":61,"offset":3006},"indent":[]}},{"type":"text","value":"前，","position":{"start":{"line":92,"column":61,"offset":3006},"end":{"line":92,"column":63,"offset":3008},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":92,"column":63,"offset":3008},"end":{"line":92,"column":71,"offset":3016},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":92,"column":71,"offset":3016},"end":{"line":92,"column":74,"offset":3019},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":92,"column":74,"offset":3019},"end":{"line":92,"column":81,"offset":3026},"indent":[]}},{"type":"text","value":" 所指的是同一的意思。但当引入辅助平面字符后，就称为 ","position":{"start":{"line":92,"column":81,"offset":3026},"end":{"line":92,"column":108,"offset":3053},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":92,"column":108,"offset":3053},"end":{"line":92,"column":116,"offset":3061},"indent":[]}},{"type":"text","value":" 了。现在若有软件声称自己支持 ","position":{"start":{"line":92,"column":116,"offset":3061},"end":{"line":92,"column":132,"offset":3077},"indent":[]}},{"type":"inlineCode","value":"UCS-2","position":{"start":{"line":92,"column":132,"offset":3077},"end":{"line":92,"column":139,"offset":3084},"indent":[]}},{"type":"text","value":" 编码，那其实是暗指它不能支持在 ","position":{"start":{"line":92,"column":139,"offset":3084},"end":{"line":92,"column":156,"offset":3101},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":92,"column":156,"offset":3101},"end":{"line":92,"column":164,"offset":3109},"indent":[]}},{"type":"text","value":" 中超过 2 字节的字集。对于小于 ","position":{"start":{"line":92,"column":164,"offset":3109},"end":{"line":92,"column":182,"offset":3127},"indent":[]}},{"type":"inlineCode","value":"0x10000","position":{"start":{"line":92,"column":182,"offset":3127},"end":{"line":92,"column":191,"offset":3136},"indent":[]}},{"type":"text","value":" 的 ","position":{"start":{"line":92,"column":191,"offset":3136},"end":{"line":92,"column":194,"offset":3139},"indent":[]}},{"type":"inlineCode","value":"UCS","position":{"start":{"line":92,"column":194,"offset":3139},"end":{"line":92,"column":199,"offset":3144},"indent":[]}},{"type":"text","value":" 码，","position":{"start":{"line":92,"column":199,"offset":3144},"end":{"line":92,"column":202,"offset":3147},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":92,"column":202,"offset":3147},"end":{"line":92,"column":210,"offset":3155},"indent":[]}},{"type":"text","value":" 编码就等于 ","position":{"start":{"line":92,"column":210,"offset":3155},"end":{"line":92,"column":217,"offset":3162},"indent":[]}},{"type":"inlineCode","value":"UCS","position":{"start":{"line":92,"column":217,"offset":3162},"end":{"line":92,"column":222,"offset":3167},"indent":[]}},{"type":"text","value":" 码。","position":{"start":{"line":92,"column":222,"offset":3167},"end":{"line":92,"column":225,"offset":3170},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2946},"end":{"line":92,"column":225,"offset":3170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"因此在 ES6 之前，JavaScript 对于超出 USC-2 的字符无法正确处理，会导致字符长度、正则匹配判断错误，使用字符串的 ","position":{"start":{"line":94,"column":1,"offset":3172},"end":{"line":94,"column":68,"offset":3239},"indent":[]}},{"type":"inlineCode","value":"charCodeAt()","position":{"start":{"line":94,"column":68,"offset":3239},"end":{"line":94,"column":82,"offset":3253},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":94,"column":82,"offset":3253},"end":{"line":94,"column":85,"offset":3256},"indent":[]}},{"type":"inlineCode","value":"fromCharCode()","position":{"start":{"line":94,"column":85,"offset":3256},"end":{"line":94,"column":101,"offset":3272},"indent":[]}},{"type":"text","value":" 也无法正确识别字符与码点。","position":{"start":{"line":94,"column":101,"offset":3272},"end":{"line":94,"column":115,"offset":3286},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3172},"end":{"line":94,"column":115,"offset":3286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 新增了 ","position":{"start":{"line":96,"column":1,"offset":3288},"end":{"line":96,"column":9,"offset":3296},"indent":[]}},{"type":"inlineCode","value":"codePointAt()","position":{"start":{"line":96,"column":9,"offset":3296},"end":{"line":96,"column":24,"offset":3311},"indent":[]}},{"type":"text","value":" 与 ","position":{"start":{"line":96,"column":24,"offset":3311},"end":{"line":96,"column":27,"offset":3314},"indent":[]}},{"type":"inlineCode","value":"fromCodePoint()","position":{"start":{"line":96,"column":27,"offset":3314},"end":{"line":96,"column":44,"offset":3331},"indent":[]}},{"type":"text","value":" 方法以正确处理 32 位的 ","position":{"start":{"line":96,"column":44,"offset":3331},"end":{"line":96,"column":59,"offset":3346},"indent":[]}},{"type":"inlineCode","value":"UTF-16","position":{"start":{"line":96,"column":59,"offset":3346},"end":{"line":96,"column":67,"offset":3354},"indent":[]}},{"type":"text","value":" 字符之外的字符。","position":{"start":{"line":96,"column":67,"offset":3354},"end":{"line":96,"column":76,"offset":3363},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3288},"end":{"line":96,"column":76,"offset":3363},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Emoji","position":{"start":{"line":99,"column":5,"offset":3370},"end":{"line":99,"column":10,"offset":3375},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3366},"end":{"line":99,"column":10,"offset":3375},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'😂'.length // 2\n'1️⃣'.length // 3\n'👨‍👨‍👦'.length // 8\n'👨‍👩‍👧‍👦'.length // 11","position":{"start":{"line":101,"column":1,"offset":3377},"end":{"line":106,"column":4,"offset":3479},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"看起来就很刺激。","position":{"start":{"line":107,"column":1,"offset":3480},"end":{"line":107,"column":9,"offset":3488},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3480},"end":{"line":107,"column":9,"offset":3488},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"随着 ","position":{"start":{"line":109,"column":1,"offset":3490},"end":{"line":109,"column":4,"offset":3493},"indent":[]}},{"type":"inlineCode","value":"Emoji","position":{"start":{"line":109,"column":4,"offset":3493},"end":{"line":109,"column":11,"offset":3500},"indent":[]}},{"type":"text","value":" 表情的流行，在开发中就不得不了解、考虑 ","position":{"start":{"line":109,"column":11,"offset":3500},"end":{"line":109,"column":32,"offset":3521},"indent":[]}},{"type":"inlineCode","value":"Emoji","position":{"start":{"line":109,"column":32,"offset":3521},"end":{"line":109,"column":39,"offset":3528},"indent":[]}},{"type":"text","value":" 字符了。否则最简单的 textarea 文本字数限制需求都难以正常完成。","position":{"start":{"line":109,"column":39,"offset":3528},"end":{"line":109,"column":76,"offset":3565},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3490},"end":{"line":109,"column":76,"offset":3565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"随着政治正确的发展，Emoji 现在是非常多元化了：","position":{"start":{"line":111,"column":1,"offset":3567},"end":{"line":111,"column":27,"offset":3593},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3567},"end":{"line":111,"column":27,"offset":3593},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg","alt":"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg","position":{"start":{"line":113,"column":1,"offset":3595},"end":{"line":113,"column":100,"offset":3694},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3595},"end":{"line":113,"column":100,"offset":3694},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg","alt":"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg","position":{"start":{"line":115,"column":1,"offset":3696},"end":{"line":115,"column":100,"offset":3795},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3696},"end":{"line":115,"column":100,"offset":3795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"肤色，职业，性别，取向，家庭组成都十分多元，基本覆盖了所有情况。","position":{"start":{"line":117,"column":1,"offset":3797},"end":{"line":117,"column":33,"offset":3829},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3797},"end":{"line":117,"column":33,"offset":3829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"其实在原先的基础 Emoji 字符上拓展出这些多元化字符并不难，通过码点组合就能实现。","position":{"start":{"line":119,"column":1,"offset":3831},"end":{"line":119,"column":44,"offset":3874},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3831},"end":{"line":119,"column":44,"offset":3874},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"肤色修饰符： 🏻 🏼 🏽 🏾 🏿","position":{"start":{"line":121,"column":1,"offset":3876},"end":{"line":121,"column":22,"offset":3897},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3876},"end":{"line":121,"column":22,"offset":3897},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"通过这几个肤色修饰符拼接到原有表情上，就可以实现肤色多元化：","position":{"start":{"line":123,"column":1,"offset":3899},"end":{"line":123,"column":31,"offset":3929},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3899},"end":{"line":123,"column":31,"offset":3929},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2018/09/03/5b8d21b17273c.jpg","alt":null,"position":{"start":{"line":125,"column":1,"offset":3931},"end":{"line":125,"column":53,"offset":3983},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3931},"end":{"line":125,"column":53,"offset":3983},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"通过 ","position":{"start":{"line":127,"column":1,"offset":3985},"end":{"line":127,"column":4,"offset":3988},"indent":[]}},{"type":"inlineCode","value":"零宽字符 ZWJ(U+200D)","position":{"start":{"line":127,"column":4,"offset":3988},"end":{"line":127,"column":22,"offset":4006},"indent":[]}},{"type":"text","value":" 可以实现 family emoji，U+200D 相当于是一个连接符，连接家庭成员 emoji：","position":{"start":{"line":127,"column":22,"offset":4006},"end":{"line":127,"column":71,"offset":4055},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3985},"end":{"line":127,"column":71,"offset":4055},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// family (man, woman, boy)\n// '\\u{1F468}' + '\\u{200D}' + '\\u{1F469}' + '\\u{200D}' + '\\u{1F466}'\n// 👨‍ + '\\u{200D}' + 👩‍ + '\\u{200D}' + 👦\n// length: 8\n> ‍👨‍👩‍👦\n// family (woman, woman, girl)\n// '\\u{1F469}' + '\\u{200D}' + '\\u{1F469}' + '\\u{200D}' + '\\u{1F467}'\n// 👩‍ + '\\u{200D}' + 👩‍ '\\u{200D}' + 👧\n// length: 8\n> ‍👩‍👩‍👧\n// family (woman, woman, girl, girl)\n// '\\u{1F469}' + '\\u{200D}' + '\\u{1F469}' + '\\u{200D}' + '\\u{1F467}' + '\\u{200D}' + '\\u{1F467}'\n// '👩‍' + '\\u{200D}' + '👩‍' + '\\u{200D}' + '👧‍' + '\\u{200D}'+ 👧\n// length: 11\n> ‍👩‍👩‍👧‍👧","position":{"start":{"line":129,"column":1,"offset":4057},"end":{"line":145,"column":4,"offset":4637},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"因此，遇到文本有可能含有 Emoji 的情况中，需将 Emoji 字符正则匹配出来，单独进行计算。","position":{"start":{"line":147,"column":1,"offset":4639},"end":{"line":147,"column":50,"offset":4688},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4639},"end":{"line":147,"column":50,"offset":4688},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"参考","position":{"start":{"line":150,"column":5,"offset":4695},"end":{"line":150,"column":7,"offset":4697},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4691},"end":{"line":150,"column":7,"offset":4697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"字符编码相关知识还有很多，本文仅介绍最近工作中所涉及的部分。更完善更准确的内容建议参考英文维基。","position":{"start":{"line":152,"column":1,"offset":4699},"end":{"line":152,"column":49,"offset":4747},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":4699},"end":{"line":152,"column":49,"offset":4747},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.thoughtco.com/what-is-unicode-2034272","children":[{"type":"text","value":"What Is Unicode?","position":{"start":{"line":154,"column":4,"offset":4752},"end":{"line":154,"column":20,"offset":4768},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":4751},"end":{"line":154,"column":72,"offset":4820},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":4751},"end":{"line":154,"column":72,"offset":4820},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4749},"end":{"line":154,"column":72,"offset":4820},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"cenalulu.github.io/linux/character-encoding/","children":[{"type":"text","value":"十分钟搞清字符集和字符编码","position":{"start":{"line":155,"column":4,"offset":4824},"end":{"line":155,"column":17,"offset":4837},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":4823},"end":{"line":155,"column":64,"offset":4884},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":4823},"end":{"line":155,"column":64,"offset":4884},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4821},"end":{"line":155,"column":64,"offset":4884},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://zhuanlan.zhihu.com/p/41203455","children":[{"type":"text","value":"从 Unicode 到 emoji","position":{"start":{"line":156,"column":4,"offset":4888},"end":{"line":156,"column":21,"offset":4905},"indent":[]}}],"position":{"start":{"line":156,"column":3,"offset":4887},"end":{"line":156,"column":61,"offset":4945},"indent":[]}}],"position":{"start":{"line":156,"column":3,"offset":4887},"end":{"line":156,"column":61,"offset":4945},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":4885},"end":{"line":156,"column":61,"offset":4945},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.ruanyifeng.com/blog/2016/11/byte-order.html","children":[{"type":"text","value":"理解字节序","position":{"start":{"line":157,"column":4,"offset":4949},"end":{"line":157,"column":9,"offset":4954},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":4948},"end":{"line":157,"column":67,"offset":5012},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":4948},"end":{"line":157,"column":67,"offset":5012},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4946},"end":{"line":157,"column":67,"offset":5012},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4749},"end":{"line":157,"column":67,"offset":5012},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"字符编码\",\"description\":\"have some fun\",\"date\":\"2018-09-03T14:20:00.000Z\",\"published\":true,\"cover\":\"./emoji.png\",\"coverAuthor\":\"howtogeek\",\"coverOriginalUrl\":\"https://www.howtogeek.com/\"}","position":{"start":{"line":162,"column":1,"offset":5017},"end":{"line":162,"column":222,"offset":5238},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":162,"column":222,"offset":5238}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"字符编码\",\n  \"description\": \"have some fun\",\n  \"date\": \"2018-09-03T14:20:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./emoji.png\",\n  \"coverAuthor\": \"howtogeek\",\n  \"coverOriginalUrl\": \"https://www.howtogeek.com/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.dailymail.co.uk/i/pix/2016/10/27/21/39C8A74600000578-3879480-The_touch_bar_can_display_emotions_in_messaging_apps_playback_co-a-5_1477598860842.jpg\",\n    \"alt\": \"cover\"\n  }))), mdx(\"p\", null, \"\\u4F5C\\u4E3A\\u7F16\\u7A0B\\u77E5\\u8BC6\\u57FA\\u7840\\u4E2D\\u7684\\u57FA\\u7840\\uFF0C\\u6709\\u5FC5\\u8981\\u6D88\\u5316\\u6574\\u7406\\u8F93\\u51FA\\u4E00\\u6B21\\u3002\"), mdx(\"p\", null, \"\\u672C\\u6587\\u4E3B\\u8981\\u4ECB\\u7ECD\\u4E86\\u5B57\\u7B26\\u7F16\\u7801\\u7684\\u51E0\\u4E2A\\u91CD\\u8981\\u57FA\\u7840\\u6982\\u5FF5\\uFF0C\\u4ECE \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\"), \" \\u5230 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Unicode\"), \" \\u518D\\u5230 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Emoji\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"JavaScript\"), \" \\u5B57\\u7B26\\u5904\\u7406\\u7684\\u4E00\\u4E9B\\u5751\\u3002\"), mdx(\"h3\", {\n    \"id\": \"基础概念\"\n  }, \"\\u57FA\\u7840\\u6982\\u5FF5\"), mdx(\"p\", null, \"\\u7531\\u4E8E\\u8BA1\\u7B97\\u673A\\u53EA\\u80FD\\u5904\\u7406\\u6570\\u5B57\\uFF0C\\u5982\\u679C\\u8981\\u5904\\u7406\\u6587\\u672C\\uFF0C\\u5C31\\u5FC5\\u987B\\u5148\\u628A\\u6587\\u672C\\u8F6C\\u6362\\u4E3A\\u6570\\u5B57\\u3002\\u8BA1\\u7B97\\u673A\\u4E2D\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u5B57\\u8282\\uFF08byte\\uFF09\"), \" \\u662F\\u4E00\\u4E2A \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"8bit\"), \" \\u7684\\u50A8\\u5B58\\u5355\\u5143\\uFF0C\\u4E00\\u4E2A\\u5B57\\u8282\\u80FD\\u8868\\u793A\\u7684\\u6700\\u5927\\u7684\\u6574\\u6570\\u5C31\\u662F 255\\uFF08\\u4E8C\\u8FDB\\u5236\\u768411111111 = \\u5341\\u8FDB\\u5236255\\uFF09\\uFF0C\\u5982\\u679C\\u8981\\u8868\\u793A\\u66F4\\u5927\\u7684\\u6574\\u6570\\uFF0C\\u5C31\\u5FC5\\u987B\\u7528\\u66F4\\u591A\\u7684\\u5B57\\u8282\\u3002\"), mdx(\"h4\", {\n    \"id\": \"字符集\"\n  }, \"\\u5B57\\u7B26\\u96C6\"), mdx(\"p\", null, \"\\u5B57\\u7B26\\u662F\\u6587\\u5B57\\u4E0E\\u7B26\\u53F7\\u7684\\u603B\\u79F0\\uFF0C\\u5B83\\u662F\\u4E00\\u4E2A\\u4FE1\\u606F\\u5355\\u4F4D\\u3002\\u5B57\\u7B26\\u96C6\\u5C31\\u662F\\u5B57\\u7B26\\u7684\\u96C6\\u5408\\u3002\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\\u7801\"), \"\\uFF08American Standard Code for Information Interchange\\uFF09\\u5C31\\u662F\\u4E00\\u4E2A\\u5B57\\u7B26\\u96C6\\uFF0C\\u8FD9\\u4E2A\\u96C6\\u5408\\u4E2D\\u53EA\\u6709\\u6570\\u5B57\\uFF0C\\u82F1\\u6587\\u5B57\\u6BCD\\u548C\\u4E00\\u4E9B\\u7B26\\u53F7\\u5171 127 \\u4E2A\\u5B57\\u7B26\\u3002\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u5904\\u7406\\u4E2D\\u6587\\u3001\\u65E5\\u6587\\u6587\\u672C\\uFF0C\\u4EC5\\u901A\\u8FC7 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\\u7801\"), \" \\u5C31\\u505A\\u4E0D\\u5230\\u4E86\\u3002\\u5728\\u5386\\u53F2\\u4E2D\\u7531\\u4E8E\\u773C\\u5149\\u7684\\u5C40\\u9650\\u6027\\uFF0C\\u51FA\\u73B0\\u4E86\\u4E00\\u4E9B\\u4EC5\\u80FD\\u5904\\u7406\\u90E8\\u5206\\u5B57\\u7B26\\u7684\\u5B57\\u7B26\\u96C6\\uFF0C\\u65E0\\u6CD5\\u901A\\u7528\\u3002\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.loli.net/2018/09/03/5b8d2209e4247.jpg\",\n    \"alt\": null\n  }))), mdx(\"h4\", {\n    \"id\": \"字符编码\"\n  }, \"\\u5B57\\u7B26\\u7F16\\u7801\"), mdx(\"p\", null, \"\\u5B57\\u7B26\\u7F16\\u7801\\u89C4\\u5B9A\\u4E86\\u5B57\\u7B26\\u96C6\\u548C\\u5B9E\\u9645\\u5B58\\u50A8\\u7684\\u4E8C\\u8FDB\\u5236\\u6570\\u503C\\u4E4B\\u95F4\\u7684\\u8F6C\\u6362\\u5173\\u7CFB\\u3002\\u4E00\\u822C\\u6765\\u8BF4\\uFF0C\\u6BCF\\u4E2A\\u5B57\\u7B26\\u96C6\\u90FD\\u6709\\u5176\\u5BF9\\u5E94\\u7684\\u5B57\\u7B26\\u7F16\\u7801\\u65B9\\u5F0F\\uFF08\\u6709\\u7684\\u5B57\\u7B26\\u96C6\\u6709\\u4E00\\u4E2A\\u5BF9\\u5E94\\u5B57\\u7B26\\u7F16\\u7801\\uFF0C\\u6709\\u7684\\u5219\\u6709\\u591A\\u4E2A\\uFF09\\u3002\\u50CF \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"GB18030\"), \" \\u90FD\\u4EC5\\u6709\\u4E00\\u79CD\\u7F16\\u7801\\u5B9E\\u73B0\\uFF0C\\u56E0\\u6B64\\u65E2\\u53EF\\u4EE5\\u4F5C\\u4E3A\\u5B57\\u7B26\\u96C6\\u7684\\u540D\\u5B57\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u7528\\u6765\\u6307\\u4EE3\\u5B83\\u4EEC\\u7684\\u5B57\\u7B26\\u7F16\\u7801\\u3002\"), mdx(\"p\", null, \"\\u901A\\u8FC7\\u4EE5\\u4E0A\\u6982\\u5FF5\\u7684\\u4ECB\\u7ECD\\u4E0D\\u96BE\\u7AA5\\u63A2\\u5728\\u5B57\\u7B26\\u7F16\\u7801\\u7684\\u5386\\u53F2\\u4E2D\\u5B58\\u5728\\u4EE5\\u4E0B\\u75DB\\u70B9\\uFF1A\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5B57\\u7B26\\u96C6\\u4E0D\\u591F\\u901A\\u7528\\uFF0C\\u603B\\u6709\\u8986\\u76D6\\u4E0D\\u5230\\u7684\\u5B57\\u7B26\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u65B0\\u7684\\u5B57\\u7B26\\u96C6\\u96BE\\u4EE5\\u5411\\u4E0B\\u517C\\u5BB9\\u8001\\u7684\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u8986\\u76D6\\u66F4\\u591A\\u5B57\\u7B26\\u7684\\u5B57\\u7B26\\u96C6\\uFF0C\\u96BE\\u4EE5\\u907F\\u514D\\u9700\\u8981\\u66F4\\u591A\\u5B57\\u8282\\uFF0C\\u5982\\u679C\\u6211\\u4EEC\\u7684\\u6587\\u672C\\u4EC5\\u901A\\u8FC7 \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\"), \" \\u5C31\\u80FD\\u5904\\u7406\\u7684\\u8BDD\\uFF0C\\u4F7F\\u7528\\u5360\\u7528\\u5B57\\u8282\\u66F4\\u591A\\u7684\\u5B57\\u7B26\\u96C6\\u5728\\u50A8\\u5B58\\u548C\\u4F20\\u8F93\\u90FD\\u4E0D\\u5212\\u7B97\")), mdx(\"p\", null, \"\\u8FD9\\u4E9B\\u95EE\\u9898\\u90FD\\u7531 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Unicode\"), \" \\u53CA\\u5176\\u5B57\\u7B26\\u7F16\\u7801\\u4E00\\u8D77\\u6253\\u5305\\u89E3\\u51B3\\u4E86\\u3002\"), mdx(\"h3\", {\n    \"id\": \"unicode\"\n  }, \"Unicode\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Unicode\"\n  }), \"Unicode\"), \" \\u662F\\u4E00\\u4E2A\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5B57\\u7B26\\u96C6\"), \"\\uFF0C\\u65E8\\u4E8E\\u6DB5\\u76D6\\u6240\\u6709\\u56FD\\u5BB6\\u8BED\\u8A00\\u4E2D\\u53EF\\u80FD\\u51FA\\u73B0\\u7684\\u7B26\\u53F7\\u4E0E\\u6587\\u5B57\\uFF0C\\u662F\\u76EE\\u524D\\u7EDD\\u5927\\u591A\\u6570\\u7A0B\\u5E8F\\u4F7F\\u7528\\u7684\\u5B57\\u7B26\\u7F16\\u7801\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Unicode\"), \"\\u7684\\u8BDE\\u751F\\u4E5F\\u4E0D\\u662F\\u4E00\\u8E74\\u800C\\u5C31\\uFF0C\\u4E5F\\u6709\\u5386\\u53F2\\u8FC7\\u7A0B\\u3002\"), mdx(\"h4\", {\n    \"id\": \"历史进程\"\n  }, \"\\u5386\\u53F2\\u8FDB\\u7A0B\"), mdx(\"p\", null, \"\\uFF08\\u8FD9\\u6BB5\\u4E0D\\u662F\\u7528\\u6765\\u51D1\\u6570\\u7684\\uFF0C\\u8FD9\\u51E0\\u4E2A\\u82F1\\u6587\\u7B80\\u5199\\u540E\\u9762\\u8FD8\\u4F1A\\u4E00\\u76F4\\u51FA\\u73B0\\uFF0C\\u77E5\\u9053\\u4E86\\u5386\\u53F2\\u66F4\\u65B9\\u4FBF\\u8BB0\\u5FC6\\u5206\\u8FA8\\uFF09\"), mdx(\"p\", null, \"ISO \\u4E0E IEC \\u5206\\u522B\\u63A8\\u51FA\\u4E86 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Unicode\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS\"), \"\\uFF08Universal Multiple-Octet Coded Character Set\\uFF09 \\u3002\\u540E\\u6765\\uFF08\\u53EA\\u8FC7\\u4E86\\u4E00\\u5E74\\uFF09\\uFF0C\\u4E24\\u8005\\u8FDB\\u884C\\u6574\\u5408\\uFF0C\\u5230\\u4E86 Unicode2.0 \\u65F6\\u4EE3\\uFF0CUnicode \\u7684\\u7F16\\u7801\\u548C UCS \\u7684\\u7F16\\u7801\\u90FD\\u5B8C\\u5168\\u4E00\\u81F4\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"USC\"), \" \\u8FD9\\u4E2A\\u540D\\u5B57\\u4E5F\\u5E76\\u672A\\u4ECE\\u6B64\\u6D88\\u5931\\u5728\\u5386\\u53F2\\u4E2D\\u3002\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS\"), \" \\u6807\\u51C6\\u6709\\u81EA\\u5DF1\\u7684\\u683C\\u5F0F\\uFF0C\\u5982\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \"\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-4\"), \"\\u7B49\\u7B49 \\u800C Unicode \\u4E5F\\u6709\\u81EA\\u5DF1\\u7684\\u4E0D\\u540C\\u7F16\\u7801\\u5B9E\\u73B0\\uFF0C\\u5982\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \"\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \"\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-32\"), \"\\u7B49\\u7B49\\u3002\"), mdx(\"h4\", {\n    \"id\": \"关于-unicode-自己\"\n  }, \"\\u5173\\u4E8E Unicode \\u81EA\\u5DF1\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u7801\\u70B9 code point\"), \" \\u662F\\u6307\\u5728 Unicode \\u5B57\\u7B26\\u96C6\\u4E2D\\u5B57\\u7B26\\u7684\\u503C\\uFF0C\\u6839\\u636E Unicode \\u6807\\u51C6\\uFF0C\\u662F\\u524D\\u7F00\\u4E3A \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"U+\"), \" \\u7684\\u5341\\u516D\\u8FDB\\u5236\\u6570\\u5B57\\u3002\"), mdx(\"p\", null, \"Unicode \\u5B57\\u7B26\\u5206\\u4E3A 17 \\u7EC4\\u5E73\\u9762\\uFF08plane\\uFF09\\uFF0C\\u6BCF\\u4E2A\\u5E73\\u9762\\u62E5\\u6709 2^16 (65,536) \\u4E2A\\u7801\\u70B9\\u3002\\u6BCF\\u4E00\\u4E2A\\u7801\\u70B9\\u90FD\\u53EF\\u4EE5\\u7528 16 \\u8FDB\\u5236 xy0000 \\u5230 xyFFFF \\u6765\\u8868\\u793A\\uFF0C\\u8FD9\\u91CC\\u7684 xy \\u662F\\u8868\\u793A\\u4E00\\u4E2A 16 \\u8FDB\\u5236\\u7684\\u503C\\uFF0C\\u4ECE 00 \\u5230 10\\u3002\\u76EE\\u524D\\u6211\\u4EEC\\u5E38\\u7528\\u5B57\\u7B26\\u5927\\u591A\\u90FD\\u5728 BMP \\u57FA\\u672C\\u5E73\\u9762\\u4E2D\\u3002\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://s1.ax1x.com/2018/08/29/PXQfOA.png\",\n    \"alt\": \"plane\"\n  }))), mdx(\"h4\", {\n    \"id\": \"字节序与-bom\"\n  }, \"\\u5B57\\u8282\\u5E8F\\u4E0E BOM\"), mdx(\"p\", null, \"\\u5728\\u4E86\\u89E3 Unicode \\u7684\\u5B57\\u7B26\\u7F16\\u7801\\u4E4B\\u524D\\uFF0C\\u8FD8\\u9700\\u8981\\u4E86\\u89E3\\u4E00\\u4E2A\\u5173\\u4E8E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u5B57\\u8282\\u5E8F\"), \" \\u7684\\u77E5\\u8BC6\\u3002\"), mdx(\"p\", null, \"\\u8BA1\\u7B97\\u673A\\u786C\\u4EF6\\u6709\\u4E24\\u79CD\\u50A8\\u5B58\\u6570\\u636E\\u7684\\u65B9\\u5F0F\\uFF1A\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u5927\\u7AEF\"), \"\\u5B57\\u8282\\u5E8F\\uFF08big endian\\uFF09\\u548C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u5C0F\\u7AEF\"), \"\\u5B57\\u8282\\u5E8F\\uFF08little endian\\uFF09\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5927\\u7AEF\\u5B57\\u8282\\u5E8F\\uFF1A\\u9AD8\\u4F4D\\u5B57\\u8282\\u5728\\u524D\\uFF0C\\u4F4E\\u4F4D\\u5B57\\u8282\\u5728\\u540E\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5C0F\\u7AEF\\u5B57\\u8282\\u5E8F\\uFF1A\\u4F4E\\u4F4D\\u5B57\\u8282\\u5728\\u524D\\uFF0C\\u9AD8\\u4F4D\\u5B57\\u8282\\u5728\\u540E\")), mdx(\"p\", null, \"\\u56E0\\u6B64\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"0x1234567\"), \" \\u7684\\u5927\\u7AEF\\u5B57\\u8282\\u5E8F\\u548C\\u5C0F\\u7AEF\\u5B57\\u8282\\u5E8F\\u7684\\u5199\\u6CD5\\u5982\\u4E0B\\u56FE\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.ruanyifeng.com/blogimg/asset/2016/bg2016112201.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"\\u5B57\\u8282\\u5E8F\\u7684\\u5B58\\u5728\\u4E3B\\u8981\\u662F\\u56E0\\u4E3A\\u8BA1\\u7B97\\u673A\\u7535\\u8DEF\\u5148\\u5904\\u7406\\u4F4E\\u4F4D\\u5B57\\u8282\\uFF0C\\u56E0\\u4E3A\\u8BA1\\u7B97\\u90FD\\u662F\\u4ECE\\u4F4E\\u4F4D\\u5F00\\u59CB\\u7684\\u3002\\u4F46\\u662F\\uFF0C\\u4EBA\\u7C7B\\u8FD8\\u662F\\u4E60\\u60EF\\u8BFB\\u5199\\u5927\\u7AEF\\u5B57\\u8282\\u5E8F\\u3002\\u6240\\u4EE5\\uFF0C\\u9664\\u4E86\\u8BA1\\u7B97\\u673A\\u7684\\u5185\\u90E8\\u5904\\u7406\\uFF0C\\u5176\\u4ED6\\u7684\\u573A\\u5408\\u51E0\\u4E4E\\u90FD\\u662F\\u5927\\u7AEF\\u5B57\\u8282\\u5E8F\\uFF0C\\u6BD4\\u5982\\u7F51\\u7EDC\\u4F20\\u8F93\\u548C\\u6587\\u4EF6\\u50A8\\u5B58\\u3002\"), mdx(\"p\", null, \"Unicode \\u89C4\\u8303\\u4E2D\\u63A8\\u8350\\u7684\\u6807\\u8BB0\\u5B57\\u8282\\u987A\\u5E8F\\u7684\\u65B9\\u6CD5\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"BOM\"), \"\\uFF08Byte Order Mark\\uFF09\\u3002\\u6709\\u4E00\\u4E2A\\u53EB\\u505A\\\"\\u96F6\\u5BBD\\u5EA6\\u975E\\u6362\\u884C\\u7A7A\\u683C\\uFF08ZERO WIDTH NO-BREAK SPACE\\uFF09\\\"\\u7684\\u5B57\\u7B26\\uFF0C\\u5B83\\u7684\\u7F16\\u7801\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"FEFF\"), \"\\u3002\\u800C \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"FFFE\"), \" \\u5728 UCS \\u4E2D\\u662F\\u4E0D\\u5B58\\u5728\\u7684\\u5B57\\u7B26\\uFF0C\\u6240\\u4EE5\\u4E0D\\u5E94\\u8BE5\\u51FA\\u73B0\\u5728\\u5B9E\\u9645\\u4F20\\u8F93\\u4E2D\\u3002Unicode \\u89C4\\u8303\\u4E2D\\u5B9A\\u4E49\\u6BCF\\u4E2A\\u6587\\u4EF6\\u7684\\u6700\\u524D\\u9762\\u52A0\\u5165\\u8FD9\\u4E2A\\u96F6\\u5BBD\\u5EA6\\u975E\\u6362\\u884C\\u7A7A\\u683C\\u5B57\\u7B26\\uFF0C\\u5982\\u679C\\u4E00\\u4E2A\\u6587\\u672C\\u6587\\u4EF6\\u7684\\u5934\\u4E24\\u4E2A\\u5B57\\u8282\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"FE FF\"), \"\\uFF0C\\u5C31\\u8868\\u793A\\u8BE5\\u6587\\u4EF6\\u91C7\\u7528\\u5927\\u7AEF\\u65B9\\u5F0F\\uFF1B\\u5982\\u679C\\u5934\\u4E24\\u4E2A\\u5B57\\u8282\\u662F\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"FF FE\"), \"\\uFF0C\\u5C31\\u8868\\u793A\\u8BE5\\u6587\\u4EF6\\u91C7\\u7528\\u5C0F\\u7AEF\\u65B9\\u5F0F\\u3002\"), mdx(\"p\", null, \"\\u9700\\u8981\\u6E05\\u695A\\u7684\\u662F\\uFF0C\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u4E0D\\u662F\\u6240\\u6709\\u7684\\u4E1C\\u897F\\u90FD\\u6709\\u5B57\\u8282\\u5E8F\"), \"\\uFF0C\\u800C\\u4E14\\u5B57\\u7B26\\u5E8F\\u662F\\u4EE5\\u5355\\u5B57\\u8282\\u4E3A\\u5355\\u4F4D\\u7684\\u987A\\u5E8F\\u95EE\\u9898\\u3002\"), mdx(\"p\", null, \"\\u524D\\u9762\\u63D0\\u5230 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Unicode\"), \" \\u6709\\u591A\\u79CD\\u5B57\\u7B26\\u7F16\\u7801\\u5B9E\\u73B0\\u65B9\\u5F0F\\uFF0C\\u6211\\u4EEC\\u4E3B\\u8981\\u4ECB\\u7ECD \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \"\\u3002\"), mdx(\"h4\", {\n    \"id\": \"utf-8\"\n  }, \"UTF-8\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \" \\u4F5C\\u4E3A\\u6700\\u5E38\\u89C1\\u7684 Unicode \\u5B9E\\u73B0\\u65B9\\u5F0F\\uFF0C\\u89E3\\u51B3\\u4E86\\u524D\\u9762\\u63D0\\u5230\\u7684\\u5B57\\u7B26\\u7F16\\u7801\\u51E0\\u5927\\u75DB\\u70B9\\u3002\"), mdx(\"p\", null, \" \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \" \\u7F16\\u7801\\u662F\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u53D8\\u957F\\u7F16\\u7801\"), \"\\uFF0C\\u7528 1 \\u5230 6 \\u4E2A\\u5B57\\u8282\\u7F16\\u7801\\uFF0C\\u5B8C\\u5168\\u517C\\u5BB9 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\"), \" \\u7801\\uFF0C\\u5BF9\\u4E8E ASCII \\u6DB5\\u76D6\\u7684\\u90A3\\u4E9B\\u5B57\\u7B26\\uFF0C\\u5355\\u5B57\\u8282\\u5B9E\\u73B0\\uFF0C\\u5176\\u4F59\\u5927\\u591A\\u6570\\u4E3A\\u4E09\\u5B57\\u8282\\u5B9E\\u73B0\\u3002\\u5BF9\\u4E8E\\u4EE5\\u82F1\\u6587\\u4E3A\\u4E3B\\u7684\\u6587\\u672C\\u975E\\u5E38\\u53CB\\u597D\\uFF0C\\u6700\\u8282\\u7701\\u5B58\\u50A8\\u7A7A\\u95F4\\u3002\\u7F3A\\u70B9\\u4E3B\\u8981\\u5728\\u4E8E\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \" \\u7F16\\u7801\\u901A\\u8FC7\\u591A\\u4E2A\\u5B57\\u8282\\u7EC4\\u5408\\u7684\\u65B9\\u5F0F\\u6765\\u663E\\u793A\\uFF0C\\u8FD9\\u662F\\u8BA1\\u7B97\\u673A\\u5904\\u7406\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-8\"), \" \\u7684\\u673A\\u5236\\uFF0C\\u5B83\\u662F\\u65E0\\u5B57\\u8282\\u5E8F\\u4E4B\\u5206\\u7684\\u3002\"), mdx(\"p\", null, \"UTF \\u5BB6\\u65CF\\u8FD8\\u6709 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\\uFF08\\u53CC\\u5B57\\u8282\\uFF09\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-32\\uFF08\\u56DB\\u5B57\\u8282\\uFF09\"), \" \\u5B9E\\u73B0\\uFF0C\\u4E24\\u8005\\u90FD\\u6709\\u5B57\\u8282\\u5E8F\\u95EE\\u9898\\uFF0C\\u524D\\u8005\\u66F4\\u9002\\u5408\\u6C49\\u5B57\\u7F16\\u7801\\u4F46\\u4E0D\\u652F\\u6301\\u5355\\u5B57\\u8282\\u7684 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ASCII\"), \"\\uFF0C\\u540E\\u8005\\u7531\\u4E8E\\u6D6A\\u8D39\\u50A8\\u5B58\\u7A7A\\u95F4\\u5F88\\u4E0D\\u5E38\\u89C1\\uFF0CHTML5 \\u4E2D\\u660E\\u786E\\u89C4\\u5B9A\\u7981\\u6B62\\u4F7F\\u7528 UTF-32 \\u7F16\\u7801\\u3002\"), mdx(\"h4\", {\n    \"id\": \"ucs-2\"\n  }, \"UCS-2\"), mdx(\"p\", null, \"JavaScript \\u8BBE\\u8BA1\\u4E4B\\u521D\\uFF0C\\u8FD8\\u6CA1\\u6709\\u51FA\\u73B0 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \"\\uFF0C\\u56E0\\u6B64\\u91C7\\u7528\\u7684\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"USC-2\"), \" \\u7F16\\u7801\\u3002\\u524D\\u9762\\u63D0\\u5230 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Unicode \\u7684\\u7F16\\u7801\\u548C UCS \\u7684\\u7F16\\u7801\\u90FD\\u5B8C\\u5168\\u4E00\\u81F4\"), \"\\u3002\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \" \\u662F\\u4E00\\u79CD\\u5B9A\\u957F\\u7684\\u7F16\\u7801\\u65B9\\u5F0F\\uFF0C\\u7528\\u4E24\\u4F4D\\u5B57\\u8282\\u6765\\u8868\\u793A\\u4E00\\u4F4D\\u7801\\u4F4D\\u3002\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u53EF\\u770B\\u6210\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \" \\u7684\\u7236\\u96C6\\u3002\\u5728\\u6CA1\\u6709\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u8F85\\u52A9\\u5E73\\u9762\\u5B57\\u7B26\\uFF08surrogate code points\\uFF09\"), \"\\u524D\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \" \\u6240\\u6307\\u7684\\u662F\\u540C\\u4E00\\u7684\\u610F\\u601D\\u3002\\u4F46\\u5F53\\u5F15\\u5165\\u8F85\\u52A9\\u5E73\\u9762\\u5B57\\u7B26\\u540E\\uFF0C\\u5C31\\u79F0\\u4E3A \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u4E86\\u3002\\u73B0\\u5728\\u82E5\\u6709\\u8F6F\\u4EF6\\u58F0\\u79F0\\u81EA\\u5DF1\\u652F\\u6301 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS-2\"), \" \\u7F16\\u7801\\uFF0C\\u90A3\\u5176\\u5B9E\\u662F\\u6697\\u6307\\u5B83\\u4E0D\\u80FD\\u652F\\u6301\\u5728 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u4E2D\\u8D85\\u8FC7 2 \\u5B57\\u8282\\u7684\\u5B57\\u96C6\\u3002\\u5BF9\\u4E8E\\u5C0F\\u4E8E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"0x10000\"), \" \\u7684 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS\"), \" \\u7801\\uFF0C\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u7F16\\u7801\\u5C31\\u7B49\\u4E8E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UCS\"), \" \\u7801\\u3002\"), mdx(\"p\", null, \"\\u56E0\\u6B64\\u5728 ES6 \\u4E4B\\u524D\\uFF0CJavaScript \\u5BF9\\u4E8E\\u8D85\\u51FA USC-2 \\u7684\\u5B57\\u7B26\\u65E0\\u6CD5\\u6B63\\u786E\\u5904\\u7406\\uFF0C\\u4F1A\\u5BFC\\u81F4\\u5B57\\u7B26\\u957F\\u5EA6\\u3001\\u6B63\\u5219\\u5339\\u914D\\u5224\\u65AD\\u9519\\u8BEF\\uFF0C\\u4F7F\\u7528\\u5B57\\u7B26\\u4E32\\u7684 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"charCodeAt()\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fromCharCode()\"), \" \\u4E5F\\u65E0\\u6CD5\\u6B63\\u786E\\u8BC6\\u522B\\u5B57\\u7B26\\u4E0E\\u7801\\u70B9\\u3002\"), mdx(\"p\", null, \"ES6 \\u65B0\\u589E\\u4E86 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"codePointAt()\"), \" \\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fromCodePoint()\"), \" \\u65B9\\u6CD5\\u4EE5\\u6B63\\u786E\\u5904\\u7406 32 \\u4F4D\\u7684 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"UTF-16\"), \" \\u5B57\\u7B26\\u4E4B\\u5916\\u7684\\u5B57\\u7B26\\u3002\"), mdx(\"h3\", {\n    \"id\": \"emoji\"\n  }, \"Emoji\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'\\uD83D\\uDE02'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// 2\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'1\\uFE0F\\u20E3'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// 3\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// 8\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// 11\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u770B\\u8D77\\u6765\\u5C31\\u5F88\\u523A\\u6FC0\\u3002\"), mdx(\"p\", null, \"\\u968F\\u7740 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Emoji\"), \" \\u8868\\u60C5\\u7684\\u6D41\\u884C\\uFF0C\\u5728\\u5F00\\u53D1\\u4E2D\\u5C31\\u4E0D\\u5F97\\u4E0D\\u4E86\\u89E3\\u3001\\u8003\\u8651 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Emoji\"), \" \\u5B57\\u7B26\\u4E86\\u3002\\u5426\\u5219\\u6700\\u7B80\\u5355\\u7684 textarea \\u6587\\u672C\\u5B57\\u6570\\u9650\\u5236\\u9700\\u6C42\\u90FD\\u96BE\\u4EE5\\u6B63\\u5E38\\u5B8C\\u6210\\u3002\"), mdx(\"p\", null, \"\\u968F\\u7740\\u653F\\u6CBB\\u6B63\\u786E\\u7684\\u53D1\\u5C55\\uFF0CEmoji \\u73B0\\u5728\\u662F\\u975E\\u5E38\\u591A\\u5143\\u5316\\u4E86\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg\",\n    \"alt\": \"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg\"\n  }))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg\",\n    \"alt\": \"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg\"\n  }))), mdx(\"p\", null, \"\\u80A4\\u8272\\uFF0C\\u804C\\u4E1A\\uFF0C\\u6027\\u522B\\uFF0C\\u53D6\\u5411\\uFF0C\\u5BB6\\u5EAD\\u7EC4\\u6210\\u90FD\\u5341\\u5206\\u591A\\u5143\\uFF0C\\u57FA\\u672C\\u8986\\u76D6\\u4E86\\u6240\\u6709\\u60C5\\u51B5\\u3002\"), mdx(\"p\", null, \"\\u5176\\u5B9E\\u5728\\u539F\\u5148\\u7684\\u57FA\\u7840 Emoji \\u5B57\\u7B26\\u4E0A\\u62D3\\u5C55\\u51FA\\u8FD9\\u4E9B\\u591A\\u5143\\u5316\\u5B57\\u7B26\\u5E76\\u4E0D\\u96BE\\uFF0C\\u901A\\u8FC7\\u7801\\u70B9\\u7EC4\\u5408\\u5C31\\u80FD\\u5B9E\\u73B0\\u3002\"), mdx(\"p\", null, \"\\u80A4\\u8272\\u4FEE\\u9970\\u7B26\\uFF1A \\uD83C\\uDFFB \\uD83C\\uDFFC \\uD83C\\uDFFD \\uD83C\\uDFFE \\uD83C\\uDFFF\"), mdx(\"p\", null, \"\\u901A\\u8FC7\\u8FD9\\u51E0\\u4E2A\\u80A4\\u8272\\u4FEE\\u9970\\u7B26\\u62FC\\u63A5\\u5230\\u539F\\u6709\\u8868\\u60C5\\u4E0A\\uFF0C\\u5C31\\u53EF\\u4EE5\\u5B9E\\u73B0\\u80A4\\u8272\\u591A\\u5143\\u5316\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.loli.net/2018/09/03/5b8d21b17273c.jpg\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"\\u901A\\u8FC7 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u96F6\\u5BBD\\u5B57\\u7B26 ZWJ(U+200D)\"), \" \\u53EF\\u4EE5\\u5B9E\\u73B0 family emoji\\uFF0CU+200D \\u76F8\\u5F53\\u4E8E\\u662F\\u4E00\\u4E2A\\u8FDE\\u63A5\\u7B26\\uFF0C\\u8FDE\\u63A5\\u5BB6\\u5EAD\\u6210\\u5458 emoji\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// family (man, woman, boy)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// '\\\\u{1F468}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F466}'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\uD83D\\uDC68\\u200D + '\\\\u{200D}' + \\uD83D\\uDC69\\u200D + '\\\\u{200D}' + \\uD83D\\uDC66\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// length: 8\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// family (woman, woman, girl)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F467}'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\uD83D\\uDC69\\u200D + '\\\\u{200D}' + \\uD83D\\uDC69\\u200D '\\\\u{200D}' + \\uD83D\\uDC67\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// length: 8\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// family (woman, woman, girl, girl)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F467}' + '\\\\u{200D}' + '\\\\u{1F467}'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// '\\uD83D\\uDC69\\u200D' + '\\\\u{200D}' + '\\uD83D\\uDC69\\u200D' + '\\\\u{200D}' + '\\uD83D\\uDC67\\u200D' + '\\\\u{200D}'+ \\uD83D\\uDC67\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// length: 11\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u56E0\\u6B64\\uFF0C\\u9047\\u5230\\u6587\\u672C\\u6709\\u53EF\\u80FD\\u542B\\u6709 Emoji \\u7684\\u60C5\\u51B5\\u4E2D\\uFF0C\\u9700\\u5C06 Emoji \\u5B57\\u7B26\\u6B63\\u5219\\u5339\\u914D\\u51FA\\u6765\\uFF0C\\u5355\\u72EC\\u8FDB\\u884C\\u8BA1\\u7B97\\u3002\"), mdx(\"h3\", {\n    \"id\": \"参考\"\n  }, \"\\u53C2\\u8003\"), mdx(\"p\", null, \"\\u5B57\\u7B26\\u7F16\\u7801\\u76F8\\u5173\\u77E5\\u8BC6\\u8FD8\\u6709\\u5F88\\u591A\\uFF0C\\u672C\\u6587\\u4EC5\\u4ECB\\u7ECD\\u6700\\u8FD1\\u5DE5\\u4F5C\\u4E2D\\u6240\\u6D89\\u53CA\\u7684\\u90E8\\u5206\\u3002\\u66F4\\u5B8C\\u5584\\u66F4\\u51C6\\u786E\\u7684\\u5185\\u5BB9\\u5EFA\\u8BAE\\u53C2\\u8003\\u82F1\\u6587\\u7EF4\\u57FA\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.thoughtco.com/what-is-unicode-2034272\"\n  }), \"What Is Unicode?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"cenalulu.github.io/linux/character-encoding/\"\n  }), \"\\u5341\\u5206\\u949F\\u641E\\u6E05\\u5B57\\u7B26\\u96C6\\u548C\\u5B57\\u7B26\\u7F16\\u7801\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://zhuanlan.zhihu.com/p/41203455\"\n  }), \"\\u4ECE Unicode \\u5230 emoji\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.ruanyifeng.com/blog/2016/11/byte-order.html\"\n  }), \"\\u7406\\u89E3\\u5B57\\u8282\\u5E8F\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"字符编码\",\n  \"description\": \"have some fun\",\n  \"date\": \"2018-09-03T14:20:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./emoji.png\",\n  \"coverAuthor\": \"howtogeek\",\n  \"coverOriginalUrl\": \"https://www.howtogeek.com/\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.dailymail.co.uk/i/pix/2016/10/27/21/39C8A74600000578-3879480-The_touch_bar_can_display_emotions_in_messaging_apps_playback_co-a-5_1477598860842.jpg\",\n        \"alt\": \"cover\"\n      }}></img></p>\n    <p>{`作为编程知识基础中的基础，有必要消化整理输出一次。`}</p>\n    <p>{`本文主要介绍了字符编码的几个重要基础概念，从 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII`}</code>{` 到 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Unicode`}</code>{` 再到 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Emoji`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`JavaScript`}</code>{` 字符处理的一些坑。`}</p>\n    <h3 {...{\n      \"id\": \"基础概念\"\n    }}>{`基础概念`}</h3>\n    <p>{`由于计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字。计算机中，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`字节（byte）`}</code>{` 是一个 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`8bit`}</code>{` 的储存单元，一个字节能表示的最大的整数就是 255（二进制的11111111 = 十进制255），如果要表示更大的整数，就必须用更多的字节。`}</p>\n    <h4 {...{\n      \"id\": \"字符集\"\n    }}>{`字符集`}</h4>\n    <p>{`字符是文字与符号的总称，它是一个信息单位。字符集就是字符的集合。`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII码`}</code>{`（American Standard Code for Information Interchange）就是一个字符集，这个集合中只有数字，英文字母和一些符号共 127 个字符。如果我们想处理中文、日文文本，仅通过 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII码`}</code>{` 就做不到了。在历史中由于眼光的局限性，出现了一些仅能处理部分字符的字符集，无法通用。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2018/09/03/5b8d2209e4247.jpg\",\n        \"alt\": null\n      }}></img></p>\n    <h4 {...{\n      \"id\": \"字符编码\"\n    }}>{`字符编码`}</h4>\n    <p>{`字符编码规定了字符集和实际存储的二进制数值之间的转换关系。一般来说，每个字符集都有其对应的字符编码方式（有的字符集有一个对应字符编码，有的则有多个）。像 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`GB18030`}</code>{` 都仅有一种编码实现，因此既可以作为字符集的名字，也可以用来指代它们的字符编码。`}</p>\n    <p>{`通过以上概念的介绍不难窥探在字符编码的历史中存在以下痛点：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`字符集不够通用，总有覆盖不到的字符`}</li>\n      <li parentName=\"ol\">{`新的字符集难以向下兼容老的`}</li>\n      <li parentName=\"ol\">{`覆盖更多字符的字符集，难以避免需要更多字节，如果我们的文本仅通过 `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`ASCII`}</code>{` 就能处理的话，使用占用字节更多的字符集在储存和传输都不划算`}</li>\n    </ol>\n    <p>{`这些问题都由 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Unicode`}</code>{` 及其字符编码一起打包解决了。`}</p>\n    <h3 {...{\n      \"id\": \"unicode\"\n    }}>{`Unicode`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Unicode\"\n      }}>{`Unicode`}</a>{` 是一个`}<strong parentName=\"p\">{`字符集`}</strong>{`，旨于涵盖所有国家语言中可能出现的符号与文字，是目前绝大多数程序使用的字符编码。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Unicode`}</code>{`的诞生也不是一蹴而就，也有历史过程。`}</p>\n    <h4 {...{\n      \"id\": \"历史进程\"\n    }}>{`历史进程`}</h4>\n    <p>{`（这段不是用来凑数的，这几个英文简写后面还会一直出现，知道了历史更方便记忆分辨）`}</p>\n    <p>{`ISO 与 IEC 分别推出了 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Unicode`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS`}</code>{`（Universal Multiple-Octet Coded Character Set） 。后来（只过了一年），两者进行整合，到了 Unicode2.0 时代，Unicode 的编码和 UCS 的编码都完全一致。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`USC`}</code>{` 这个名字也并未从此消失在历史中。`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS`}</code>{` 标准有自己的格式，如`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{`，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-4`}</code>{`等等 而 Unicode 也有自己的不同编码实现，如`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{`，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{`，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-32`}</code>{`等等。`}</p>\n    <h4 {...{\n      \"id\": \"关于-unicode-自己\"\n    }}>{`关于 Unicode 自己`}</h4>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`码点 code point`}</code>{` 是指在 Unicode 字符集中字符的值，根据 Unicode 标准，是前缀为 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`U+`}</code>{` 的十六进制数字。`}</p>\n    <p>{`Unicode 字符分为 17 组平面（plane），每个平面拥有 2^16 (65,536) 个码点。每一个码点都可以用 16 进制 xy0000 到 xyFFFF 来表示，这里的 xy 是表示一个 16 进制的值，从 00 到 10。目前我们常用字符大多都在 BMP 基本平面中。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://s1.ax1x.com/2018/08/29/PXQfOA.png\",\n        \"alt\": \"plane\"\n      }}></img></p>\n    <h4 {...{\n      \"id\": \"字节序与-bom\"\n    }}>{`字节序与 BOM`}</h4>\n    <p>{`在了解 Unicode 的字符编码之前，还需要了解一个关于 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`字节序`}</code>{` 的知识。`}</p>\n    <p>{`计算机硬件有两种储存数据的方式：`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`大端`}</code>{`字节序（big endian）和`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`小端`}</code>{`字节序（little endian）。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`大端字节序：高位字节在前，低位字节在后`}</li>\n      <li parentName=\"ul\">{`小端字节序：低位字节在前，高位字节在后`}</li>\n    </ul>\n    <p>{`因此，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`0x1234567`}</code>{` 的大端字节序和小端字节序的写法如下图：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://www.ruanyifeng.com/blogimg/asset/2016/bg2016112201.gif\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`字节序的存在主要是因为计算机电路先处理低位字节，因为计算都是从低位开始的。但是，人类还是习惯读写大端字节序。所以，除了计算机的内部处理，其他的场合几乎都是大端字节序，比如网络传输和文件储存。`}</p>\n    <p>{`Unicode 规范中推荐的标记字节顺序的方法是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`BOM`}</code>{`（Byte Order Mark）。有一个叫做\"零宽度非换行空格（ZERO WIDTH NO-BREAK SPACE）\"的字符，它的编码是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`FEFF`}</code>{`。而 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`FFFE`}</code>{` 在 UCS 中是不存在的字符，所以不应该出现在实际传输中。Unicode 规范中定义每个文件的最前面加入这个零宽度非换行空格字符，如果一个文本文件的头两个字节是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`FE FF`}</code>{`，就表示该文件采用大端方式；如果头两个字节是`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`FF FE`}</code>{`，就表示该文件采用小端方式。`}</p>\n    <p>{`需要清楚的是，`}<strong parentName=\"p\">{`不是所有的东西都有字节序`}</strong>{`，而且字符序是以单字节为单位的顺序问题。`}</p>\n    <p>{`前面提到 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Unicode`}</code>{` 有多种字符编码实现方式，我们主要介绍 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{`。`}</p>\n    <h4 {...{\n      \"id\": \"utf-8\"\n    }}>{`UTF-8`}</h4>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{` 作为最常见的 Unicode 实现方式，解决了前面提到的字符编码几大痛点。`}</p>\n    <p>{` `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{` 编码是`}<strong parentName=\"p\">{`变长编码`}</strong>{`，用 1 到 6 个字节编码，完全兼容 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII`}</code>{` 码，对于 ASCII 涵盖的那些字符，单字节实现，其余大多数为三字节实现。对于以英文为主的文本非常友好，最节省存储空间。缺点主要在于`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{` 编码通过多个字节组合的方式来显示，这是计算机处理`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-8`}</code>{` 的机制，它是无字节序之分的。`}</p>\n    <p>{`UTF 家族还有 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16（双字节）`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-32（四字节）`}</code>{` 实现，两者都有字节序问题，前者更适合汉字编码但不支持单字节的 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ASCII`}</code>{`，后者由于浪费储存空间很不常见，HTML5 中明确规定禁止使用 UTF-32 编码。`}</p>\n    <h4 {...{\n      \"id\": \"ucs-2\"\n    }}>{`UCS-2`}</h4>\n    <p>{`JavaScript 设计之初，还没有出现 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{`，因此采用的是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`USC-2`}</code>{` 编码。前面提到 `}<strong parentName=\"p\">{`Unicode 的编码和 UCS 的编码都完全一致`}</strong>{`。`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{` 是一种定长的编码方式，用两位字节来表示一位码位。`}</p>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 可看成是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{` 的父集。在没有`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`辅助平面字符（surrogate code points）`}</code>{`前，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{` 所指的是同一的意思。但当引入辅助平面字符后，就称为 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 了。现在若有软件声称自己支持 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS-2`}</code>{` 编码，那其实是暗指它不能支持在 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 中超过 2 字节的字集。对于小于 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`0x10000`}</code>{` 的 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS`}</code>{` 码，`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 编码就等于 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UCS`}</code>{` 码。`}</p>\n    <p>{`因此在 ES6 之前，JavaScript 对于超出 USC-2 的字符无法正确处理，会导致字符长度、正则匹配判断错误，使用字符串的 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`charCodeAt()`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`fromCharCode()`}</code>{` 也无法正确识别字符与码点。`}</p>\n    <p>{`ES6 新增了 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`codePointAt()`}</code>{` 与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`fromCodePoint()`}</code>{` 方法以正确处理 32 位的 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UTF-16`}</code>{` 字符之外的字符。`}</p>\n    <h3 {...{\n      \"id\": \"emoji\"\n    }}>{`Emoji`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'😂'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 2`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'1️⃣'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 3`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'👨‍👨‍👦'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 8`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'👨‍👩‍👧‍👦'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 11`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`看起来就很刺激。`}</p>\n    <p>{`随着 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Emoji`}</code>{` 表情的流行，在开发中就不得不了解、考虑 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Emoji`}</code>{` 字符了。否则最简单的 textarea 文本字数限制需求都难以正常完成。`}</p>\n    <p>{`随着政治正确的发展，Emoji 现在是非常多元化了：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg\",\n        \"alt\": \"https://i.loli.net/2018/09/03/5b8d23bc27a4c.jpg\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg\",\n        \"alt\": \"https://i.loli.net/2018/09/03/5b8d23bc4ed9b.jpg\"\n      }}></img></p>\n    <p>{`肤色，职业，性别，取向，家庭组成都十分多元，基本覆盖了所有情况。`}</p>\n    <p>{`其实在原先的基础 Emoji 字符上拓展出这些多元化字符并不难，通过码点组合就能实现。`}</p>\n    <p>{`肤色修饰符： 🏻 🏼 🏽 🏾 🏿`}</p>\n    <p>{`通过这几个肤色修饰符拼接到原有表情上，就可以实现肤色多元化：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2018/09/03/5b8d21b17273c.jpg\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`通过 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`零宽字符 ZWJ(U+200D)`}</code>{` 可以实现 family emoji，U+200D 相当于是一个连接符，连接家庭成员 emoji：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// family (man, woman, boy)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// '\\\\u{1F468}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F466}'`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 👨‍ + '\\\\u{200D}' + 👩‍ + '\\\\u{200D}' + 👦`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// length: 8`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{` ‍👨‍👩‍👦\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// family (woman, woman, girl)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F467}'`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 👩‍ + '\\\\u{200D}' + 👩‍ '\\\\u{200D}' + 👧`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// length: 8`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{` ‍👩‍👩‍👧\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// family (woman, woman, girl, girl)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F469}' + '\\\\u{200D}' + '\\\\u{1F467}' + '\\\\u{200D}' + '\\\\u{1F467}'`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// '👩‍' + '\\\\u{200D}' + '👩‍' + '\\\\u{200D}' + '👧‍' + '\\\\u{200D}'+ 👧`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// length: 11`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{` ‍👩‍👩‍👧‍👧`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`因此，遇到文本有可能含有 Emoji 的情况中，需将 Emoji 字符正则匹配出来，单独进行计算。`}</p>\n    <h3 {...{\n      \"id\": \"参考\"\n    }}>{`参考`}</h3>\n    <p>{`字符编码相关知识还有很多，本文仅介绍最近工作中所涉及的部分。更完善更准确的内容建议参考英文维基。`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.thoughtco.com/what-is-unicode-2034272\"\n        }}>{`What Is Unicode?`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"cenalulu.github.io/linux/character-encoding/\"\n        }}>{`十分钟搞清字符集和字符编码`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://zhuanlan.zhihu.com/p/41203455\"\n        }}>{`从 Unicode 到 emoji`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ruanyifeng.com/blog/2016/11/byte-order.html\"\n        }}>{`理解字节序`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}