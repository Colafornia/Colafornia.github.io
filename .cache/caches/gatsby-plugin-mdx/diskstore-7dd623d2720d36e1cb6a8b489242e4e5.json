{"expireTime":9007200825609831000,"key":"gatsby-plugin-mdx-entire-payload-a961abf9d456149e95e5da5143a920af-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"image","title":null,"url":"/images/iife.png","alt":"cover","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":27,"offset":27},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":27,"offset":27},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"起因","position":{"start":{"line":4,"column":5,"offset":33},"end":{"line":4,"column":7,"offset":35},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":7,"offset":35},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"最近在进行 ","position":{"start":{"line":5,"column":1,"offset":36},"end":{"line":5,"column":7,"offset":42},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Colafornia/underscore-analysis","children":[{"type":"text","value":"underscore.js 源码分析","position":{"start":{"line":5,"column":8,"offset":43},"end":{"line":5,"column":26,"offset":61},"indent":[]}}],"position":{"start":{"line":5,"column":7,"offset":42},"end":{"line":5,"column":78,"offset":113},"indent":[]}},{"type":"text","value":"，也顺便看了些别的库的大致封装方式\nunderscore:","position":{"start":{"line":5,"column":78,"offset":113},"end":{"line":6,"column":12,"offset":142},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":36},"end":{"line":6,"column":12,"offset":142},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"(function() {\n  var root = this;\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n  // blabla\n}());","position":{"start":{"line":8,"column":1,"offset":144},"end":{"line":18,"column":4,"offset":355},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!--more-->","position":{"start":{"line":20,"column":1,"offset":357},"end":{"line":20,"column":12,"offset":368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"早期的 jQuery:","position":{"start":{"line":22,"column":1,"offset":370},"end":{"line":22,"column":12,"offset":381},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":370},"end":{"line":22,"column":12,"offset":381},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"(function( window, undefined ) {\nvar jQuery = (function() {console.log('hello');});\nwindow.jQuery = window.$ = jQuery;\nif ( typeof define === \"function\" && define.amd && define.amd.jQuery ) {\n    define( \"jquery\", [], function () { return jQuery; } );\n}\n// blabla\n})( window );","position":{"start":{"line":24,"column":1,"offset":383},"end":{"line":33,"column":4,"offset":678},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这个封装和调用方式一看就是匿名函数嘛，可是匿名函数，然后呢？\n于是趁着下午比较闲翻开高程从匿名函数这个地方开始看，发现了一系列的知识点......\n大概脉络是: 函数定义方式 → 匿名函数的创建 → 匿名函数自执行还是IIFE？ → IIFE 的应用","position":{"start":{"line":35,"column":1,"offset":680},"end":{"line":37,"column":52,"offset":805},"indent":[1,1]}}],"position":{"start":{"line":35,"column":1,"offset":680},"end":{"line":37,"column":52,"offset":805},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"函数定义方式","position":{"start":{"line":39,"column":5,"offset":811},"end":{"line":39,"column":11,"offset":817},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":807},"end":{"line":39,"column":11,"offset":817},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"函数声明","position":{"start":{"line":41,"column":4,"offset":822},"end":{"line":41,"column":8,"offset":826},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":822},"end":{"line":41,"column":8,"offset":826},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function foo () {}","position":{"start":{"line":42,"column":3,"offset":829},"end":{"line":44,"column":6,"offset":859},"indent":[3,3]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"函数声明提升","position":{"start":{"line":45,"column":5,"offset":864},"end":{"line":45,"column":11,"offset":870},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":862},"end":{"line":45,"column":13,"offset":872},"indent":[]}},{"type":"text","value":" ：可以把函数声明放在调用它的语句后面","position":{"start":{"line":45,"column":13,"offset":872},"end":{"line":45,"column":32,"offset":891},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":862},"end":{"line":45,"column":32,"offset":891},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":819},"end":{"line":46,"column":1,"offset":892},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"函数表达式","position":{"start":{"line":47,"column":4,"offset":896},"end":{"line":47,"column":9,"offset":901},"indent":[]}}],"position":{"start":{"line":47,"column":4,"offset":896},"end":{"line":47,"column":9,"offset":901},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var foo = function () {}","position":{"start":{"line":48,"column":3,"offset":904},"end":{"line":50,"column":6,"offset":940},"indent":[3,3]}},{"type":"paragraph","children":[{"type":"text","value":"也属于匿名函数","position":{"start":{"line":51,"column":3,"offset":943},"end":{"line":51,"column":10,"offset":950},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":943},"end":{"line":51,"column":10,"offset":950},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":893},"end":{"line":52,"column":1,"offset":951},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用Function构造函数","position":{"start":{"line":53,"column":4,"offset":955},"end":{"line":53,"column":18,"offset":969},"indent":[]}}],"position":{"start":{"line":53,"column":4,"offset":955},"end":{"line":53,"column":18,"offset":969},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var foo = new Function ()","position":{"start":{"line":54,"column":3,"offset":972},"end":{"line":56,"column":6,"offset":1009},"indent":[3,3]}}],"position":{"start":{"line":53,"column":1,"offset":952},"end":{"line":56,"column":6,"offset":1009},"indent":[1,1,1]}}],"position":{"start":{"line":41,"column":1,"offset":819},"end":{"line":56,"column":6,"offset":1009},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"匿名函数的创建","position":{"start":{"line":58,"column":5,"offset":1015},"end":{"line":58,"column":12,"offset":1022},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1011},"end":{"line":58,"column":12,"offset":1022},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"上述 使用函数表达式创建","position":{"start":{"line":60,"column":4,"offset":1027},"end":{"line":60,"column":16,"offset":1039},"indent":[]}}],"position":{"start":{"line":60,"column":4,"offset":1027},"end":{"line":60,"column":16,"offset":1039},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1024},"end":{"line":61,"column":1,"offset":1040},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"(function (x, y) {alert(x + y)})(2, 3)","position":{"start":{"line":62,"column":4,"offset":1044},"end":{"line":62,"column":44,"offset":1084},"indent":[]}},{"type":"text","value":"\n在第一个括号内创建匿名函数，第二个括号用于调用该匿名函数，并传入参数","position":{"start":{"line":62,"column":44,"offset":1084},"end":{"line":63,"column":37,"offset":1121},"indent":[3]}}],"position":{"start":{"line":62,"column":4,"offset":1044},"end":{"line":63,"column":37,"offset":1121},"indent":[3]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"function (x,y) {alert(x + y)}","position":{"start":{"line":64,"column":6,"offset":1127},"end":{"line":64,"column":37,"offset":1158},"indent":[]}},{"type":"text","value":"部分为所声明的函数","position":{"start":{"line":64,"column":37,"offset":1158},"end":{"line":64,"column":46,"offset":1167},"indent":[]}}],"position":{"start":{"line":64,"column":6,"offset":1127},"end":{"line":64,"column":46,"offset":1167},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":1124},"end":{"line":64,"column":46,"offset":1167},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"然后用括号把函数声明包起来 ","position":{"start":{"line":65,"column":6,"offset":1173},"end":{"line":65,"column":20,"offset":1187},"indent":[]}},{"type":"inlineCode","value":"(function (x,y) {alert(x + y)})","position":{"start":{"line":65,"column":20,"offset":1187},"end":{"line":65,"column":53,"offset":1220},"indent":[]}}],"position":{"start":{"line":65,"column":6,"offset":1173},"end":{"line":65,"column":53,"offset":1220},"indent":[]}}],"position":{"start":{"line":65,"column":3,"offset":1170},"end":{"line":65,"column":53,"offset":1220},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"最后调用此函数 ","position":{"start":{"line":66,"column":6,"offset":1226},"end":{"line":66,"column":14,"offset":1234},"indent":[]}},{"type":"inlineCode","value":"(function (x, y) {alert(x + y)})(2, 3)","position":{"start":{"line":66,"column":14,"offset":1234},"end":{"line":66,"column":54,"offset":1274},"indent":[]}}],"position":{"start":{"line":66,"column":6,"offset":1226},"end":{"line":66,"column":54,"offset":1274},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":1223},"end":{"line":66,"column":54,"offset":1274},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":1124},"end":{"line":66,"column":54,"offset":1274},"indent":[3,3]}}],"position":{"start":{"line":62,"column":1,"offset":1041},"end":{"line":66,"column":54,"offset":1274},"indent":[1,1,1,1]}}],"position":{"start":{"line":60,"column":1,"offset":1024},"end":{"line":66,"column":54,"offset":1274},"indent":[1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"在这里我们也可以看到，创建匿名函数的方式有两种，第二种方式才会声明后立即执行，即不是所有的匿名函数都是可以立即执行的","position":{"start":{"line":68,"column":3,"offset":1278},"end":{"line":68,"column":61,"offset":1336},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":1278},"end":{"line":68,"column":61,"offset":1336},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1276},"end":{"line":68,"column":61,"offset":1336},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"“匿名函数自执行” vs  IIFE","position":{"start":{"line":70,"column":5,"offset":1342},"end":{"line":70,"column":23,"offset":1360},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1338},"end":{"line":70,"column":23,"offset":1360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"自执行，有的地方会写为自调用，是一个经常会听到的的概念，我们再深究一下它吧。所谓的“匿名函数自执行”指的是 ","position":{"start":{"line":72,"column":1,"offset":1362},"end":{"line":72,"column":55,"offset":1416},"indent":[]}},{"type":"inlineCode","value":"Self-executing anonymous function","position":{"start":{"line":72,"column":55,"offset":1416},"end":{"line":72,"column":90,"offset":1451},"indent":[]}},{"type":"text","value":" ，经常与 ","position":{"start":{"line":72,"column":90,"offset":1451},"end":{"line":72,"column":96,"offset":1457},"indent":[]}},{"type":"inlineCode","value":"IIFE","position":{"start":{"line":72,"column":96,"offset":1457},"end":{"line":72,"column":102,"offset":1463},"indent":[]}},{"type":"text","value":" 混淆， ","position":{"start":{"line":72,"column":102,"offset":1463},"end":{"line":72,"column":107,"offset":1468},"indent":[]}},{"type":"inlineCode","value":"Immediately-Invoked Function Expression","position":{"start":{"line":72,"column":107,"offset":1468},"end":{"line":72,"column":148,"offset":1509},"indent":[]}},{"type":"text","value":" 即 ","position":{"start":{"line":72,"column":148,"offset":1509},"end":{"line":72,"column":151,"offset":1512},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"立即调用的函数表达式","position":{"start":{"line":72,"column":153,"offset":1514},"end":{"line":72,"column":163,"offset":1524},"indent":[]}}],"position":{"start":{"line":72,"column":151,"offset":1512},"end":{"line":72,"column":165,"offset":1526},"indent":[]}},{"type":"text","value":" ，含义上的辨析 ","position":{"start":{"line":72,"column":165,"offset":1526},"end":{"line":72,"column":174,"offset":1535},"indent":[]}},{"type":"link","title":null,"url":"https://zh.wikipedia.org/wiki/%E7%AB%8B%E5%8D%B3%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F","children":[{"type":"text","value":"先戳一下中文wiki","position":{"start":{"line":72,"column":175,"offset":1536},"end":{"line":72,"column":185,"offset":1546},"indent":[]}}],"position":{"start":{"line":72,"column":174,"offset":1535},"end":{"line":72,"column":299,"offset":1660},"indent":[]}},{"type":"text","value":" 吧。","position":{"start":{"line":72,"column":299,"offset":1660},"end":{"line":72,"column":302,"offset":1663},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1362},"end":{"line":72,"column":302,"offset":1663},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"IIFE 的具体的例子：","position":{"start":{"line":74,"column":1,"offset":1665},"end":{"line":74,"column":13,"offset":1677},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1665},"end":{"line":74,"column":13,"offset":1677},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// 第一个例子\n(function (x) { return x + 1;}(2)) // => 3\n// 第二个例子\nvar result = function (x) { return x + 1; }(2); // => result 的值为3","position":{"start":{"line":76,"column":1,"offset":1679},"end":{"line":81,"column":4,"offset":1813},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"把第一个例子敲到控制台中，我们可以看到这个 ","position":{"start":{"line":83,"column":1,"offset":1815},"end":{"line":83,"column":23,"offset":1837},"indent":[]}},{"type":"inlineCode","value":"()","position":{"start":{"line":83,"column":23,"offset":1837},"end":{"line":83,"column":27,"offset":1841},"indent":[]}},{"type":"text","value":" 中的代码立即执行了，返回3。对于第二个例子，它实际上执行的是：","position":{"start":{"line":83,"column":27,"offset":1841},"end":{"line":83,"column":59,"offset":1873},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1815},"end":{"line":83,"column":59,"offset":1873},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var foo = function (x) {return x + 1;}\nvar result = foo(2)","position":{"start":{"line":85,"column":1,"offset":1875},"end":{"line":88,"column":4,"offset":1941},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这里有一个知识点： ","position":{"start":{"line":90,"column":1,"offset":1943},"end":{"line":90,"column":11,"offset":1953},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"对于函数类对象，不论是一个现场定义的匿名函数，还是一个之前定义的有名字的函数，它们在不加括号的时候都代表了这个函数对象本身，而加了括号就代表调用这个函数，也就是这个函数 return 的对象。","position":{"start":{"line":90,"column":13,"offset":1955},"end":{"line":90,"column":109,"offset":2051},"indent":[]}}],"position":{"start":{"line":90,"column":11,"offset":1953},"end":{"line":90,"column":111,"offset":2053},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1943},"end":{"line":90,"column":111,"offset":2053},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"再回到匿名函数自执行与 IIFE 的辨析上，匿名函数自执行(Self-executing anonymous function)是一个不够准确的概念：","position":{"start":{"line":92,"column":1,"offset":2055},"end":{"line":92,"column":76,"offset":2130},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2055},"end":{"line":92,"column":76,"offset":2130},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// 它是一个自执行的匿名函数，它必须用 arguments.callee() 来递归地调用自己\nvar foo = function() { arguments.callee(); };\n// 它是一个立即执行的匿名函数，只是立即执行了一段 code ，并不是调用自己\n(function () { /* code */ } ());","position":{"start":{"line":94,"column":1,"offset":2132},"end":{"line":99,"column":4,"offset":2308},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"因此 ","position":{"start":{"line":101,"column":1,"offset":2310},"end":{"line":101,"column":4,"offset":2313},"indent":[]}},{"type":"inlineCode","value":"自执行","position":{"start":{"line":101,"column":4,"offset":2313},"end":{"line":101,"column":9,"offset":2318},"indent":[]}},{"type":"text","value":" 意味着调用自己， ","position":{"start":{"line":101,"column":9,"offset":2318},"end":{"line":101,"column":19,"offset":2328},"indent":[]}},{"type":"inlineCode","value":"立即调用，立即执行","position":{"start":{"line":101,"column":19,"offset":2328},"end":{"line":101,"column":30,"offset":2339},"indent":[]}},{"type":"text","value":" 强调的是定义函数的时候就直接执行了函数，与函数体内是否调用自身无关。只能说这是两个看起来有些类似的概念，但实际上所强调的内容完全不一样。IIFE 也可以调用自己，匿名函数可以立即执行。","position":{"start":{"line":101,"column":30,"offset":2339},"end":{"line":101,"column":123,"offset":2432},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2310},"end":{"line":101,"column":123,"offset":2432},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"IIFE 的应用","position":{"start":{"line":103,"column":5,"offset":2438},"end":{"line":103,"column":13,"offset":2446},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2434},"end":{"line":103,"column":13,"offset":2446},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"立即调用的函数表达式的根本作用是 ","position":{"start":{"line":105,"column":1,"offset":2448},"end":{"line":105,"column":18,"offset":2465},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"创建一个独立的作用域","position":{"start":{"line":105,"column":20,"offset":2467},"end":{"line":105,"column":30,"offset":2477},"indent":[]}}],"position":{"start":{"line":105,"column":18,"offset":2465},"end":{"line":105,"column":32,"offset":2479},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":105,"column":32,"offset":2479},"end":{"line":105,"column":33,"offset":2480},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2448},"end":{"line":105,"column":33,"offset":2480},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"模拟块级作用域，在ES6之前 JavaScript 是没有块级作用域的。\n在实际应用场景中，项目引用了很多不同的库 ，库与库之间是如何保证变量不被覆盖呢？","position":{"start":{"line":107,"column":4,"offset":2485},"end":{"line":108,"column":43,"offset":2564},"indent":[3]}}],"position":{"start":{"line":107,"column":4,"offset":2485},"end":{"line":108,"column":43,"offset":2564},"indent":[3]}},{"type":"code","lang":"javascript","meta":null,"value":"// libA.js\n(function(){\n  var num = 1;\n\t// blabla\n})();","position":{"start":{"line":110,"column":3,"offset":2568},"end":{"line":115,"column":8,"offset":2647},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":107,"column":1,"offset":2482},"end":{"line":115,"column":8,"offset":2647},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":107,"column":1,"offset":2482},"end":{"line":115,"column":8,"offset":2647},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  // libB.js\n  (function(){\n  \tvar num = 2;\n  \t// blabla\n  })();","position":{"start":{"line":118,"column":1,"offset":2650},"end":{"line":122,"column":8,"offset":2714},"indent":[1,1,1,1]}}],"position":{"start":{"line":118,"column":1,"offset":2650},"end":{"line":122,"column":8,"offset":2714},"indent":[1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"\n这样的话，就如同我们在前面看到的 jquery underscore 那样，使自身作用域独立，不会互相覆盖。\n\n2. 解决闭包的坑： **闭包只能取得包含函数中任何变量的最后一个值**\n这次改造一下《高程三》中提到的例子作为参照吧：\n\n```javascript\nfunction test () {\n  var result = new Array();\n  var foo = null;\n  for (var i = 0; i < 10; i++) {\n\t  foo = function () {\n      console.log(i)\n    }\n    result.push(foo)\n  };\n  return result\n}\n\nvar res = test()\nfor (var i =0,len = res.length; i < len; i++){\n  res[i]()\n}\n// 控制台中打出来的是10个10，而不是1，2，3...\n// i 是贯穿整个作用域的，而不是给每个 foo 分配了一个 i\n// test()执行完毕后才调用 console.log() 一定是发生在for循环已循环结束后，此时i值为10","position":{"start":{"line":123,"column":1,"offset":2715},"end":{"line":150,"column":6,"offset":3293},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  在线例子可以戳 ","position":{"start":{"line":152,"column":1,"offset":3295},"end":{"line":152,"column":11,"offset":3305},"indent":[]}},{"type":"link","title":null,"url":"https://jsfiddle.net/46x5s72a/","children":[{"type":"text","value":"JSFiddle","position":{"start":{"line":152,"column":12,"offset":3306},"end":{"line":152,"column":20,"offset":3314},"indent":[]}}],"position":{"start":{"line":152,"column":11,"offset":3305},"end":{"line":152,"column":53,"offset":3347},"indent":[]}},{"type":"text","value":"\n  这个坑该怎么处理呢？引入IIFE！下面代码是可用的，把 i 的值作为索引锁住了","position":{"start":{"line":152,"column":53,"offset":3347},"end":{"line":153,"column":42,"offset":3389},"indent":[1]}}],"position":{"start":{"line":152,"column":1,"offset":3295},"end":{"line":153,"column":42,"offset":3389},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"// 解决思路是给每个foo函数创建一个独立的作用域\nfunction test () {\n  var result = new Array();\n  var foo = null;\n  for (var i = 0; i < 10; i++) {\n    // 添加一个IIFE\n\t  (function(index) {\n\t    foo = function() {console.log(index);};\n      result.push(foo)\n\t   })(i);\n    };\n    return result\n  }\n\n  var res = test()\n  for (var i =0,len = res.length; i < len; i++){\n    res[i]()\n  }","position":{"start":{"line":155,"column":1,"offset":3391},"end":{"line":174,"column":6,"offset":3803},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"参考内容","position":{"start":{"line":176,"column":7,"offset":3811},"end":{"line":176,"column":11,"offset":3815},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":3805},"end":{"line":176,"column":11,"offset":3815},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html","children":[{"type":"text","value":"汤姆大叔的博客:深入理解JavaScript系列（4）: 立即调用的函数表达式","position":{"start":{"line":177,"column":6,"offset":3821},"end":{"line":177,"column":45,"offset":3860},"indent":[]}}],"position":{"start":{"line":177,"column":5,"offset":3820},"end":{"line":177,"column":108,"offset":3923},"indent":[]}}],"position":{"start":{"line":177,"column":5,"offset":3820},"end":{"line":177,"column":108,"offset":3923},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":3816},"end":{"line":177,"column":108,"offset":3923},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://stackoverflow.com/questions/592396/what-is-the-purpose-of-a-self-executing-function-in-javascript","children":[{"type":"text","value":"stackoverflow: What is the purpose of a self executing function in javascript","position":{"start":{"line":178,"column":6,"offset":3929},"end":{"line":178,"column":83,"offset":4006},"indent":[]}}],"position":{"start":{"line":178,"column":5,"offset":3928},"end":{"line":178,"column":190,"offset":4113},"indent":[]}}],"position":{"start":{"line":178,"column":5,"offset":3928},"end":{"line":178,"column":190,"offset":4113},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":3924},"end":{"line":178,"column":190,"offset":4113},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://weizhifeng.net/immediately-invoked-function-expression.html","children":[{"type":"text","value":"weizhifeng.net: JavaScript中的立即执行函数表达式","position":{"start":{"line":179,"column":6,"offset":4119},"end":{"line":179,"column":43,"offset":4156},"indent":[]}}],"position":{"start":{"line":179,"column":5,"offset":4118},"end":{"line":179,"column":112,"offset":4225},"indent":[]}}],"position":{"start":{"line":179,"column":5,"offset":4118},"end":{"line":179,"column":112,"offset":4225},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":4114},"end":{"line":179,"column":112,"offset":4225},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":3816},"end":{"line":179,"column":112,"offset":4225},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"由匿名函数展开的一系列知识点\",\"date\":\"2016-11-23T22:00:00.000Z\",\"published\":true,\"cover\":\"./iife.png\",\"coverAuthor\":\"Unknown\",\"coverOriginalUrl\":\"https://www.google.com\"}","position":{"start":{"line":182,"column":1,"offset":4228},"end":{"line":182,"column":195,"offset":4422},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":182,"column":195,"offset":4422}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"由匿名函数展开的一系列知识点\",\n  \"date\": \"2016-11-23T22:00:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./iife.png\",\n  \"coverAuthor\": \"Unknown\",\n  \"coverOriginalUrl\": \"https://www.google.com\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/iife.png\",\n    \"alt\": \"cover\"\n  }))), mdx(\"h3\", {\n    \"id\": \"起因\"\n  }, \"\\u8D77\\u56E0\"), mdx(\"p\", null, \"\\u6700\\u8FD1\\u5728\\u8FDB\\u884C \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Colafornia/underscore-analysis\"\n  }), \"underscore.js \\u6E90\\u7801\\u5206\\u6790\"), \"\\uFF0C\\u4E5F\\u987A\\u4FBF\\u770B\\u4E86\\u4E9B\\u522B\\u7684\\u5E93\\u7684\\u5927\\u81F4\\u5C01\\u88C5\\u65B9\\u5F0F\\nunderscore:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" root \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"_\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"obj\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"obj \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"instanceof\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"instanceof\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_wrapped \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// blabla\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u65E9\\u671F\\u7684 jQuery:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"window\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"undefined\")), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" jQuery \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'hello'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\nwindow\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"jQuery \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" window\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"$ \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" jQuery\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"typeof\"), \" define \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"===\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"function\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"&&\"), \" define\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"amd \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"&&\"), \" define\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"amd\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"jQuery \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"define\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"jquery\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" jQuery\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// blabla\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" window \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u5C01\\u88C5\\u548C\\u8C03\\u7528\\u65B9\\u5F0F\\u4E00\\u770B\\u5C31\\u662F\\u533F\\u540D\\u51FD\\u6570\\u561B\\uFF0C\\u53EF\\u662F\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u7136\\u540E\\u5462\\uFF1F\\n\\u4E8E\\u662F\\u8D81\\u7740\\u4E0B\\u5348\\u6BD4\\u8F83\\u95F2\\u7FFB\\u5F00\\u9AD8\\u7A0B\\u4ECE\\u533F\\u540D\\u51FD\\u6570\\u8FD9\\u4E2A\\u5730\\u65B9\\u5F00\\u59CB\\u770B\\uFF0C\\u53D1\\u73B0\\u4E86\\u4E00\\u7CFB\\u5217\\u7684\\u77E5\\u8BC6\\u70B9......\\n\\u5927\\u6982\\u8109\\u7EDC\\u662F: \\u51FD\\u6570\\u5B9A\\u4E49\\u65B9\\u5F0F \\u2192 \\u533F\\u540D\\u51FD\\u6570\\u7684\\u521B\\u5EFA \\u2192 \\u533F\\u540D\\u51FD\\u6570\\u81EA\\u6267\\u884C\\u8FD8\\u662FIIFE\\uFF1F \\u2192 IIFE \\u7684\\u5E94\\u7528\"), mdx(\"h3\", {\n    \"id\": \"函数定义方式\"\n  }, \"\\u51FD\\u6570\\u5B9A\\u4E49\\u65B9\\u5F0F\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u51FD\\u6570\\u58F0\\u660E\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"function foo () {}\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u51FD\\u6570\\u58F0\\u660E\\u63D0\\u5347\"), \" \\uFF1A\\u53EF\\u4EE5\\u628A\\u51FD\\u6570\\u58F0\\u660E\\u653E\\u5728\\u8C03\\u7528\\u5B83\\u7684\\u8BED\\u53E5\\u540E\\u9762\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"var foo = function () {}\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4E5F\\u5C5E\\u4E8E\\u533F\\u540D\\u51FD\\u6570\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528Function\\u6784\\u9020\\u51FD\\u6570\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"var foo = new Function ()\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"h3\", {\n    \"id\": \"匿名函数的创建\"\n  }, \"\\u533F\\u540D\\u51FD\\u6570\\u7684\\u521B\\u5EFA\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4E0A\\u8FF0 \\u4F7F\\u7528\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\\u521B\\u5EFA\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(function (x, y) {alert(x + y)})(2, 3)\"), \"\\n\\u5728\\u7B2C\\u4E00\\u4E2A\\u62EC\\u53F7\\u5185\\u521B\\u5EFA\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u7B2C\\u4E8C\\u4E2A\\u62EC\\u53F7\\u7528\\u4E8E\\u8C03\\u7528\\u8BE5\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u5E76\\u4F20\\u5165\\u53C2\\u6570\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"function (x,y) {alert(x + y)}\"), \"\\u90E8\\u5206\\u4E3A\\u6240\\u58F0\\u660E\\u7684\\u51FD\\u6570\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7136\\u540E\\u7528\\u62EC\\u53F7\\u628A\\u51FD\\u6570\\u58F0\\u660E\\u5305\\u8D77\\u6765 \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(function (x,y) {alert(x + y)})\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6700\\u540E\\u8C03\\u7528\\u6B64\\u51FD\\u6570 \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(function (x, y) {alert(x + y)})(2, 3)\"))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5728\\u8FD9\\u91CC\\u6211\\u4EEC\\u4E5F\\u53EF\\u4EE5\\u770B\\u5230\\uFF0C\\u521B\\u5EFA\\u533F\\u540D\\u51FD\\u6570\\u7684\\u65B9\\u5F0F\\u6709\\u4E24\\u79CD\\uFF0C\\u7B2C\\u4E8C\\u79CD\\u65B9\\u5F0F\\u624D\\u4F1A\\u58F0\\u660E\\u540E\\u7ACB\\u5373\\u6267\\u884C\\uFF0C\\u5373\\u4E0D\\u662F\\u6240\\u6709\\u7684\\u533F\\u540D\\u51FD\\u6570\\u90FD\\u662F\\u53EF\\u4EE5\\u7ACB\\u5373\\u6267\\u884C\\u7684\")), mdx(\"h3\", {\n    \"id\": \"匿名函数自执行-vs--iife\"\n  }, \"\\u201C\\u533F\\u540D\\u51FD\\u6570\\u81EA\\u6267\\u884C\\u201D vs  IIFE\"), mdx(\"p\", null, \"\\u81EA\\u6267\\u884C\\uFF0C\\u6709\\u7684\\u5730\\u65B9\\u4F1A\\u5199\\u4E3A\\u81EA\\u8C03\\u7528\\uFF0C\\u662F\\u4E00\\u4E2A\\u7ECF\\u5E38\\u4F1A\\u542C\\u5230\\u7684\\u7684\\u6982\\u5FF5\\uFF0C\\u6211\\u4EEC\\u518D\\u6DF1\\u7A76\\u4E00\\u4E0B\\u5B83\\u5427\\u3002\\u6240\\u8C13\\u7684\\u201C\\u533F\\u540D\\u51FD\\u6570\\u81EA\\u6267\\u884C\\u201D\\u6307\\u7684\\u662F \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Self-executing anonymous function\"), \" \\uFF0C\\u7ECF\\u5E38\\u4E0E \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"IIFE\"), \" \\u6DF7\\u6DC6\\uFF0C \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Immediately-Invoked Function Expression\"), \" \\u5373 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u7ACB\\u5373\\u8C03\\u7528\\u7684\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\"), \" \\uFF0C\\u542B\\u4E49\\u4E0A\\u7684\\u8FA8\\u6790 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zh.wikipedia.org/wiki/%E7%AB%8B%E5%8D%B3%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F\"\n  }), \"\\u5148\\u6233\\u4E00\\u4E0B\\u4E2D\\u6587wiki\"), \" \\u5427\\u3002\"), mdx(\"p\", null, \"IIFE \\u7684\\u5177\\u4F53\\u7684\\u4F8B\\u5B50\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"// \\u7B2C\\u4E00\\u4E2A\\u4F8B\\u5B50\\n(function (x) { return x + 1;}(2)) // => 3\\n// \\u7B2C\\u4E8C\\u4E2A\\u4F8B\\u5B50\\nvar result = function (x) { return x + 1; }(2); // => result \\u7684\\u503C\\u4E3A3\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u628A\\u7B2C\\u4E00\\u4E2A\\u4F8B\\u5B50\\u6572\\u5230\\u63A7\\u5236\\u53F0\\u4E2D\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u770B\\u5230\\u8FD9\\u4E2A \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"()\"), \" \\u4E2D\\u7684\\u4EE3\\u7801\\u7ACB\\u5373\\u6267\\u884C\\u4E86\\uFF0C\\u8FD4\\u56DE3\\u3002\\u5BF9\\u4E8E\\u7B2C\\u4E8C\\u4E2A\\u4F8B\\u5B50\\uFF0C\\u5B83\\u5B9E\\u9645\\u4E0A\\u6267\\u884C\\u7684\\u662F\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"var foo = function (x) {return x + 1;}\\nvar result = foo(2)\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u8FD9\\u91CC\\u6709\\u4E00\\u4E2A\\u77E5\\u8BC6\\u70B9\\uFF1A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5BF9\\u4E8E\\u51FD\\u6570\\u7C7B\\u5BF9\\u8C61\\uFF0C\\u4E0D\\u8BBA\\u662F\\u4E00\\u4E2A\\u73B0\\u573A\\u5B9A\\u4E49\\u7684\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u8FD8\\u662F\\u4E00\\u4E2A\\u4E4B\\u524D\\u5B9A\\u4E49\\u7684\\u6709\\u540D\\u5B57\\u7684\\u51FD\\u6570\\uFF0C\\u5B83\\u4EEC\\u5728\\u4E0D\\u52A0\\u62EC\\u53F7\\u7684\\u65F6\\u5019\\u90FD\\u4EE3\\u8868\\u4E86\\u8FD9\\u4E2A\\u51FD\\u6570\\u5BF9\\u8C61\\u672C\\u8EAB\\uFF0C\\u800C\\u52A0\\u4E86\\u62EC\\u53F7\\u5C31\\u4EE3\\u8868\\u8C03\\u7528\\u8FD9\\u4E2A\\u51FD\\u6570\\uFF0C\\u4E5F\\u5C31\\u662F\\u8FD9\\u4E2A\\u51FD\\u6570 return \\u7684\\u5BF9\\u8C61\\u3002\")), mdx(\"p\", null, \"\\u518D\\u56DE\\u5230\\u533F\\u540D\\u51FD\\u6570\\u81EA\\u6267\\u884C\\u4E0E IIFE \\u7684\\u8FA8\\u6790\\u4E0A\\uFF0C\\u533F\\u540D\\u51FD\\u6570\\u81EA\\u6267\\u884C(Self-executing anonymous function)\\u662F\\u4E00\\u4E2A\\u4E0D\\u591F\\u51C6\\u786E\\u7684\\u6982\\u5FF5\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"// \\u5B83\\u662F\\u4E00\\u4E2A\\u81EA\\u6267\\u884C\\u7684\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u5B83\\u5FC5\\u987B\\u7528 arguments.callee() \\u6765\\u9012\\u5F52\\u5730\\u8C03\\u7528\\u81EA\\u5DF1\\nvar foo = function() { arguments.callee(); };\\n// \\u5B83\\u662F\\u4E00\\u4E2A\\u7ACB\\u5373\\u6267\\u884C\\u7684\\u533F\\u540D\\u51FD\\u6570\\uFF0C\\u53EA\\u662F\\u7ACB\\u5373\\u6267\\u884C\\u4E86\\u4E00\\u6BB5 code \\uFF0C\\u5E76\\u4E0D\\u662F\\u8C03\\u7528\\u81EA\\u5DF1\\n(function () { /* code */ } ());\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"\\u56E0\\u6B64 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u81EA\\u6267\\u884C\"), \" \\u610F\\u5473\\u7740\\u8C03\\u7528\\u81EA\\u5DF1\\uFF0C \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\u7ACB\\u5373\\u8C03\\u7528\\uFF0C\\u7ACB\\u5373\\u6267\\u884C\"), \" \\u5F3A\\u8C03\\u7684\\u662F\\u5B9A\\u4E49\\u51FD\\u6570\\u7684\\u65F6\\u5019\\u5C31\\u76F4\\u63A5\\u6267\\u884C\\u4E86\\u51FD\\u6570\\uFF0C\\u4E0E\\u51FD\\u6570\\u4F53\\u5185\\u662F\\u5426\\u8C03\\u7528\\u81EA\\u8EAB\\u65E0\\u5173\\u3002\\u53EA\\u80FD\\u8BF4\\u8FD9\\u662F\\u4E24\\u4E2A\\u770B\\u8D77\\u6765\\u6709\\u4E9B\\u7C7B\\u4F3C\\u7684\\u6982\\u5FF5\\uFF0C\\u4F46\\u5B9E\\u9645\\u4E0A\\u6240\\u5F3A\\u8C03\\u7684\\u5185\\u5BB9\\u5B8C\\u5168\\u4E0D\\u4E00\\u6837\\u3002IIFE \\u4E5F\\u53EF\\u4EE5\\u8C03\\u7528\\u81EA\\u5DF1\\uFF0C\\u533F\\u540D\\u51FD\\u6570\\u53EF\\u4EE5\\u7ACB\\u5373\\u6267\\u884C\\u3002\"), mdx(\"h3\", {\n    \"id\": \"iife-的应用\"\n  }, \"IIFE \\u7684\\u5E94\\u7528\"), mdx(\"p\", null, \"\\u7ACB\\u5373\\u8C03\\u7528\\u7684\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\\u7684\\u6839\\u672C\\u4F5C\\u7528\\u662F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u521B\\u5EFA\\u4E00\\u4E2A\\u72EC\\u7ACB\\u7684\\u4F5C\\u7528\\u57DF\"), \"\\u3002\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6A21\\u62DF\\u5757\\u7EA7\\u4F5C\\u7528\\u57DF\\uFF0C\\u5728ES6\\u4E4B\\u524D JavaScript \\u662F\\u6CA1\\u6709\\u5757\\u7EA7\\u4F5C\\u7528\\u57DF\\u7684\\u3002\\n\\u5728\\u5B9E\\u9645\\u5E94\\u7528\\u573A\\u666F\\u4E2D\\uFF0C\\u9879\\u76EE\\u5F15\\u7528\\u4E86\\u5F88\\u591A\\u4E0D\\u540C\\u7684\\u5E93 \\uFF0C\\u5E93\\u4E0E\\u5E93\\u4E4B\\u95F4\\u662F\\u5982\\u4F55\\u4FDD\\u8BC1\\u53D8\\u91CF\\u4E0D\\u88AB\\u8986\\u76D6\\u5462\\uFF1F\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// libA.js\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" num \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\t\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// blabla\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"p\", null, \"  // libB.js\\n(function(){\\nvar num = 2;\\n// blabla\\n})();\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\n\\u8FD9\\u6837\\u7684\\u8BDD\\uFF0C\\u5C31\\u5982\\u540C\\u6211\\u4EEC\\u5728\\u524D\\u9762\\u770B\\u5230\\u7684 jquery underscore \\u90A3\\u6837\\uFF0C\\u4F7F\\u81EA\\u8EAB\\u4F5C\\u7528\\u57DF\\u72EC\\u7ACB\\uFF0C\\u4E0D\\u4F1A\\u4E92\\u76F8\\u8986\\u76D6\\u3002\\n\\n2. \\u89E3\\u51B3\\u95ED\\u5305\\u7684\\u5751\\uFF1A **\\u95ED\\u5305\\u53EA\\u80FD\\u53D6\\u5F97\\u5305\\u542B\\u51FD\\u6570\\u4E2D\\u4EFB\\u4F55\\u53D8\\u91CF\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u503C**\\n\\u8FD9\\u6B21\\u6539\\u9020\\u4E00\\u4E0B\\u300A\\u9AD8\\u7A0B\\u4E09\\u300B\\u4E2D\\u63D0\\u5230\\u7684\\u4F8B\\u5B50\\u4F5C\\u4E3A\\u53C2\\u7167\\u5427\\uFF1A\\n\\n```javascript\\nfunction test () {\\n  var result = new Array();\\n  var foo = null;\\n  for (var i = 0; i < 10; i++) {\\n\\t  foo = function () {\\n      console.log(i)\\n    }\\n    result.push(foo)\\n  };\\n  return result\\n}\\n\\nvar res = test()\\nfor (var i =0,len = res.length; i < len; i++){\\n  res[i]()\\n}\\n// \\u63A7\\u5236\\u53F0\\u4E2D\\u6253\\u51FA\\u6765\\u7684\\u662F10\\u4E2A10\\uFF0C\\u800C\\u4E0D\\u662F1\\uFF0C2\\uFF0C3...\\n// i \\u662F\\u8D2F\\u7A7F\\u6574\\u4E2A\\u4F5C\\u7528\\u57DF\\u7684\\uFF0C\\u800C\\u4E0D\\u662F\\u7ED9\\u6BCF\\u4E2A foo \\u5206\\u914D\\u4E86\\u4E00\\u4E2A i\\n// test()\\u6267\\u884C\\u5B8C\\u6BD5\\u540E\\u624D\\u8C03\\u7528 console.log() \\u4E00\\u5B9A\\u662F\\u53D1\\u751F\\u5728for\\u5FAA\\u73AF\\u5DF2\\u5FAA\\u73AF\\u7ED3\\u675F\\u540E\\uFF0C\\u6B64\\u65F6i\\u503C\\u4E3A10\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"  \\u5728\\u7EBF\\u4F8B\\u5B50\\u53EF\\u4EE5\\u6233 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jsfiddle.net/46x5s72a/\"\n  }), \"JSFiddle\"), \"\\n\\u8FD9\\u4E2A\\u5751\\u8BE5\\u600E\\u4E48\\u5904\\u7406\\u5462\\uFF1F\\u5F15\\u5165IIFE\\uFF01\\u4E0B\\u9762\\u4EE3\\u7801\\u662F\\u53EF\\u7528\\u7684\\uFF0C\\u628A i \\u7684\\u503C\\u4F5C\\u4E3A\\u7D22\\u5F15\\u9501\\u4F4F\\u4E86\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-javascript line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u89E3\\u51B3\\u601D\\u8DEF\\u662F\\u7ED9\\u6BCF\\u4E2Afoo\\u51FD\\u6570\\u521B\\u5EFA\\u4E00\\u4E2A\\u72EC\\u7ACB\\u7684\\u4F5C\\u7528\\u57DF\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"test\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" result \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Array\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" foo \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"10\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\u6DFB\\u52A0\\u4E00\\u4E2AIIFE\"), \"\\n\\t  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"index\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n\\t    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"foo\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"index\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      result\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"push\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"foo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\\t   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" result\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" res \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"test\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"len \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" res\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"length\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" len\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    res\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"参考内容\"\n  }, \"\\u53C2\\u8003\\u5185\\u5BB9\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html\"\n  }), \"\\u6C64\\u59C6\\u5927\\u53D4\\u7684\\u535A\\u5BA2:\\u6DF1\\u5165\\u7406\\u89E3JavaScript\\u7CFB\\u5217\\uFF084\\uFF09: \\u7ACB\\u5373\\u8C03\\u7528\\u7684\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://stackoverflow.com/questions/592396/what-is-the-purpose-of-a-self-executing-function-in-javascript\"\n  }), \"stackoverflow: What is the purpose of a self executing function in javascript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://weizhifeng.net/immediately-invoked-function-expression.html\"\n  }), \"weizhifeng.net: JavaScript\\u4E2D\\u7684\\u7ACB\\u5373\\u6267\\u884C\\u51FD\\u6570\\u8868\\u8FBE\\u5F0F\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"由匿名函数展开的一系列知识点\",\n  \"date\": \"2016-11-23T22:00:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./iife.png\",\n  \"coverAuthor\": \"Unknown\",\n  \"coverOriginalUrl\": \"https://www.google.com\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/images/iife.png\",\n        \"alt\": \"cover\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"起因\"\n    }}>{`起因`}</h3>\n    <p>{`最近在进行 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Colafornia/underscore-analysis\"\n      }}>{`underscore.js 源码分析`}</a>{`，也顺便看了些别的库的大致封装方式\nunderscore:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` root `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`_`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`obj`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`obj `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`instanceof`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`_`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` obj`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`instanceof`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`_`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`_`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`obj`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_wrapped `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` obj`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// blabla`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    {\n      /*more*/\n    }\n    <p>{`早期的 jQuery:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`window`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"token keyword\"\n            }}>{`undefined`}</span></span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` jQuery `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'hello'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\nwindow`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`jQuery `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` window`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`$ `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` jQuery`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`typeof`}</span>{` define `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`===`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"function\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` define`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`amd `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` define`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`amd`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`jQuery `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`define`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"jquery\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` jQuery`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// blabla`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{` window `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`这个封装和调用方式一看就是匿名函数嘛，可是匿名函数，然后呢？\n于是趁着下午比较闲翻开高程从匿名函数这个地方开始看，发现了一系列的知识点......\n大概脉络是: 函数定义方式 → 匿名函数的创建 → 匿名函数自执行还是IIFE？ → IIFE 的应用`}</p>\n    <h3 {...{\n      \"id\": \"函数定义方式\"\n    }}>{`函数定义方式`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`函数声明`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-text line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`function foo () {}`}</code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span></span></pre></div>\n        <p parentName=\"li\"><strong parentName=\"p\">{`函数声明提升`}</strong>{` ：可以把函数声明放在调用它的语句后面`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`函数表达式`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-text line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`var foo = function () {}`}</code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span></span></pre></div>\n        <p parentName=\"li\">{`也属于匿名函数`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`使用Function构造函数`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-text line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`var foo = new Function ()`}</code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span></span></pre></div>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"匿名函数的创建\"\n    }}>{`匿名函数的创建`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`上述 使用函数表达式创建`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`(function (x, y) {alert(x + y)})(2, 3)`}</code>{`\n在第一个括号内创建匿名函数，第二个括号用于调用该匿名函数，并传入参数`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><code parentName=\"li\" {...{\n              \"className\": \"language-text\"\n            }}>{`function (x,y) {alert(x + y)}`}</code>{`部分为所声明的函数`}</li>\n          <li parentName=\"ul\">{`然后用括号把函数声明包起来 `}<code parentName=\"li\" {...{\n              \"className\": \"language-text\"\n            }}>{`(function (x,y) {alert(x + y)})`}</code></li>\n          <li parentName=\"ul\">{`最后调用此函数 `}<code parentName=\"li\" {...{\n              \"className\": \"language-text\"\n            }}>{`(function (x, y) {alert(x + y)})(2, 3)`}</code></li>\n        </ul>\n      </li>\n    </ol>\n    <blockquote>\n      <p parentName=\"blockquote\">{`在这里我们也可以看到，创建匿名函数的方式有两种，第二种方式才会声明后立即执行，即不是所有的匿名函数都是可以立即执行的`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"匿名函数自执行-vs--iife\"\n    }}>{`“匿名函数自执行” vs  IIFE`}</h3>\n    <p>{`自执行，有的地方会写为自调用，是一个经常会听到的的概念，我们再深究一下它吧。所谓的“匿名函数自执行”指的是 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Self-executing anonymous function`}</code>{` ，经常与 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`IIFE`}</code>{` 混淆， `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Immediately-Invoked Function Expression`}</code>{` 即 `}<strong parentName=\"p\">{`立即调用的函数表达式`}</strong>{` ，含义上的辨析 `}<a parentName=\"p\" {...{\n        \"href\": \"https://zh.wikipedia.org/wiki/%E7%AB%8B%E5%8D%B3%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F\"\n      }}>{`先戳一下中文wiki`}</a>{` 吧。`}</p>\n    <p>{`IIFE 的具体的例子：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`// 第一个例子\n(function (x) { return x + 1;}(2)) // => 3\n// 第二个例子\nvar result = function (x) { return x + 1; }(2); // => result 的值为3`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`把第一个例子敲到控制台中，我们可以看到这个 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`()`}</code>{` 中的代码立即执行了，返回3。对于第二个例子，它实际上执行的是：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`var foo = function (x) {return x + 1;}\nvar result = foo(2)`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`这里有一个知识点： `}<strong parentName=\"p\">{`对于函数类对象，不论是一个现场定义的匿名函数，还是一个之前定义的有名字的函数，它们在不加括号的时候都代表了这个函数对象本身，而加了括号就代表调用这个函数，也就是这个函数 return 的对象。`}</strong></p>\n    <p>{`再回到匿名函数自执行与 IIFE 的辨析上，匿名函数自执行(Self-executing anonymous function)是一个不够准确的概念：`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`// 它是一个自执行的匿名函数，它必须用 arguments.callee() 来递归地调用自己\nvar foo = function() { arguments.callee(); };\n// 它是一个立即执行的匿名函数，只是立即执行了一段 code ，并不是调用自己\n(function () { /* code */ } ());`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`因此 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`自执行`}</code>{` 意味着调用自己， `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`立即调用，立即执行`}</code>{` 强调的是定义函数的时候就直接执行了函数，与函数体内是否调用自身无关。只能说这是两个看起来有些类似的概念，但实际上所强调的内容完全不一样。IIFE 也可以调用自己，匿名函数可以立即执行。`}</p>\n    <h3 {...{\n      \"id\": \"iife-的应用\"\n    }}>{`IIFE 的应用`}</h3>\n    <p>{`立即调用的函数表达式的根本作用是 `}<strong parentName=\"p\">{`创建一个独立的作用域`}</strong>{`。`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`模拟块级作用域，在ES6之前 JavaScript 是没有块级作用域的。\n在实际应用场景中，项目引用了很多不同的库 ，库与库之间是如何保证变量不被覆盖呢？`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"javascript\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-javascript line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-javascript\"\n            }}><span parentName=\"code\" {...{\n                \"className\": \"token comment\"\n              }}>{`// libA.js`}</span>{`\n`}<span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`(`}</span><span parentName=\"code\" {...{\n                \"className\": \"token keyword\"\n              }}>{`function`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`(`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`)`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n                \"className\": \"token keyword\"\n              }}>{`var`}</span>{` num `}<span parentName=\"code\" {...{\n                \"className\": \"token operator\"\n              }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n                \"className\": \"token number\"\n              }}>{`1`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`;`}</span>{`\n\t`}<span parentName=\"code\" {...{\n                \"className\": \"token comment\"\n              }}>{`// blabla`}</span>{`\n`}<span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`)`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`(`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`)`}</span><span parentName=\"code\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`;`}</span></code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n      </li>\n    </ol>\n    <p>{`  // libB.js\n(function(){\nvar num = 2;\n// blabla\n})();`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`\n这样的话，就如同我们在前面看到的 jquery underscore 那样，使自身作用域独立，不会互相覆盖。\n\n2. 解决闭包的坑： **闭包只能取得包含函数中任何变量的最后一个值**\n这次改造一下《高程三》中提到的例子作为参照吧：\n\n\\`\\`\\`javascript\nfunction test () {\n  var result = new Array();\n  var foo = null;\n  for (var i = 0; i < 10; i++) {\n\t  foo = function () {\n      console.log(i)\n    }\n    result.push(foo)\n  };\n  return result\n}\n\nvar res = test()\nfor (var i =0,len = res.length; i < len; i++){\n  res[i]()\n}\n// 控制台中打出来的是10个10，而不是1，2，3...\n// i 是贯穿整个作用域的，而不是给每个 foo 分配了一个 i\n// test()执行完毕后才调用 console.log() 一定是发生在for循环已循环结束后，此时i值为10`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`  在线例子可以戳 `}<a parentName=\"p\" {...{\n        \"href\": \"https://jsfiddle.net/46x5s72a/\"\n      }}>{`JSFiddle`}</a>{`\n这个坑该怎么处理呢？引入IIFE！下面代码是可用的，把 i 的值作为索引锁住了`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-javascript line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 解决思路是给每个foo函数创建一个独立的作用域`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`test`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` result `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Array`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` foo `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`null`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`for`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`10`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`++`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 添加一个IIFE`}</span>{`\n\t  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`index`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n\t    `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`foo`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`index`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      result`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`push`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`foo`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\t   `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` result\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` res `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`test`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`for`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`var`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`len `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` res`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` len`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`++`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    res`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"参考内容\"\n    }}>{`参考内容`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html\"\n        }}>{`汤姆大叔的博客:深入理解JavaScript系列（4）: 立即调用的函数表达式`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://stackoverflow.com/questions/592396/what-is-the-purpose-of-a-self-executing-function-in-javascript\"\n        }}>{`stackoverflow: What is the purpose of a self executing function in javascript`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://weizhifeng.net/immediately-invoked-function-expression.html\"\n        }}>{`weizhifeng.net: JavaScript中的立即执行函数表达式`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}